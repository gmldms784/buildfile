{"version":3,"sources":["utils/getHashedPw.ts","utils/getUserInfo.ts","utils/getSortedAssign.ts","utils/getColorState.ts","utils/sortRows.js","utils/dateToString.ts","utils/MajorDictionary.ts","Main/Model/UserModel.tsx","Main/Model/AssignmentModel.tsx","Main/Model/AnswerModel.tsx","Main/Model/GroupModel.tsx","Main/Model/MessageModel.tsx","Pages/Login.tsx","Components/PageInfo.tsx","Components/AssignmentBox.tsx","Pages/Main.tsx","Components/Layout.tsx","Components/Header.tsx","Components/SideBar.tsx","Components/MarkdownViewer.tsx","Components/MarkdownEditor.tsx","utils/constants.ts","Components/SortedTableHead.tsx","Components/ScoreStatsRow.tsx","Components/ScoreStats.tsx","Components/EnhancedTableToolbar.tsx","Components/EnhancedTableHead.tsx","Components/QuestionSelector.tsx","Components/StudentSelector.tsx","Components/MemberPopup.tsx","Components/SaveSnackbar.tsx","Components/Loading.tsx","Components/UserAnswer.tsx","Components/StudentQuestion.tsx","Pages/Assignment.tsx","Pages/ProfAssignment.tsx","Pages/Setting.tsx","Pages/SetAssignment.tsx","Pages/SetMember.tsx","Pages/Error.tsx","Pages/Admin.tsx","Main/Router.tsx","Main/Provider.tsx","Main/LayoutRouter.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["hashData","data","crypto","createHash","update","Buffer","from","toString","digest","getHashedPw","password","a","axios","get","withCredentials","hashToken","result","alert","getUserInfo","token","name","value","document","cookie","match","getCookie","decoded","jwt","decode","console","log","type","String","userNumber","major","substring","getMajorStr","userId","userName","undefined","getSortedAssign","assignment","obj","forEach","as","assignmentState","push","colorState","studentState","professorState","color","getColorState","index","compareElements","b","orderBy","sortRows","rows","order","mappedList","map","element","sort","compared","el","modifiedDateToString","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","majorDict","120","150","280","910","830","270","340","430","450","440","860","920","520","540","550","560","580","610","620","630","640","650","810","840","930","871","872","873","874","875","890","710","720","730","940","majorNumber","Number","slice","UserState","createContext","UserDispatch","UserContextProvider","children","useState","user","setUser","useEffect","u","Provider","useUserState","useContext","useUserDispatch","SelectedState","SelectedDispatch","SelectedAssignState","AssignmentState","AssignmentDispatch","AssignmentContextProvider","selected","setSelected","selectedAssign","setSelectedAssign","setAssignment","history","useHistory","fetchAssignment","assignmentId","then","res","catch","err","status","response","useAssignmentState","useSelectedDispatch","useSelectedAssignState","AnswerState","AnswerDispatch","SaveAnswer","AnswerContextProvider","answer","setAnswer","fetchAnswer","process","ans","post","answers","JSON","stringify","useAnswerState","saveAnswer","GroupState","GroupDispatch","FetchGroup","SaveGroup","DeleteGroup","GroupContextProvider","group","setGroup","fetchGroup","groupId","delete","useGroupState","MessageState","MessageDispatch","OnOffState","OnOffDispatch","SaveMessage","MessageContextProvider","message","setMessage","onOff","setOnOff","msg","onff","withCookies","props","cookies","setCookies","id","setId","pw","setPw","btnText","setBtnText","checked","setChecked","replace","savedId","loginAsTestProfessorCookie","loginAsTestStudentCookie","handleLoginSubmit","e","preventDefault","hashedPw","userPw","set","path","remove","className","Paper","elevation","Grid","container","alignItems","justify","direction","src","Typography","variant","Link","href","onSubmit","TextField","label","required","rowsMax","onChange","target","FormControlLabel","control","Checkbox","Button","size","Divider","orientation","onClick","PageInfo","icon","mainTitle","subTitle","information","rightSide","clsx","item","AssignmentBox","asInfo","state","deadline","to","assignmentName","Main","assignments","sortedAssign","setSortedAssign","_","Layout","open","useOpen","alertOpen","setAlertOpen","clearTime","setClearTime","mobileRef","createRef","onAlert","setTimeout","handleCloseAlert","clearTimeout","current","offsetWidth","window","location","ref","classes","userType","Toolbar","Alert","severity","AlertTitle","Badge","Header","trigger","useScrollTrigger","Slide","appear","in","IconButton","aria-label","edge","confirm","withRouter","nowOn","setNowOn","pathname","arr","List","subheader","ListSubheader","component","ListItem","button","ListItemText","primary","length","MarkdownViewer","renderLink","newProps","escapeHtml","plugins","RemarkMathPlugin","remarkGfm","renderers","text","emoji","break","paragraph","emphasis","link","linkReference","strong","list","start","listItem","blockquote","code","table","tableCell","style","textAlign","align","padding","isHeader","background","inlineCode","math","inlineMath","html","MarkDownWithLaTeXRules","latexRules","LatexHighlightRules","ace","require","getRules","$rules","regex","next","embedRules","MarkdownHighlightRules","CustomMarkdownMode","HighlightRules","Mode","MarkdownEditor","contents","source","setSource","timer","setTimer","editorDivRef","useRef","editorRef","viewerRef","updateSource","session","editor","getSession","getValue","clearInterval","customMarkDown","setMode","height","offsetHeight","setInterval","setValue","mode","theme","fontSize","showPrintMargin","minLines","maxLines","showGutter","highlightActiveLine","wrapEnabled","flexItem","TABLE__SCORE","allowSorting","TABLE__QUESTION","disablePadding","TABLE__STUDENTS","SortedTableHead","headCells","onRequestSort","TableHead","TableRow","TableCell","headCell","sortDirection","TableSortLabel","active","ScoreStatsRow","row","setOpen","scope","submittedCount","markedCount","allMarked","green","red","scoreSum","paddingBottom","paddingTop","colSpan","Collapse","timeout","unmountOnExit","Box","margin","gutterBottom","Table","TableBody","scores","scoreRow","questionNumber","questionId","marked","score","ScoreStats","makeStyles","paper","width","marginBottom","spacing","minWidth","visuallyHidden","border","clip","overflow","position","top","assign","answersDict","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","setRows","students","singleRow","submitted","answerOfQuesId","filter","answerContent","questions","ques","TableContainer","reduce","acc","cur","getAverageScore","TablePagination","rowsPerPageOptions","count","onChangePage","newValue","onChangeRowsPerPage","parseInt","useStyles","root","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","dark","title","flex","EnhancedTableToolbar","numSelected","EnhancedTableHead","onSelectAllClick","rowCount","indeterminate","inputProps","idx","property","event","getComparator","stableSort","array","comparator","stabilizedThis","QuestionSelector","emptyRows","setEmptyRows","Math","min","q","aria-labelledby","newSelecteds","n","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","newpage","getIcon","StudentSelector","selectedQues","ansOfQues","find","MemberPopup","typeProps","groupProps","handleClose","groups","saveGroupFunc","forceUpdate","setName","members","setMembers","openGroups","setOpenGroups","openImg","setOpenImg","tmp","student","setMembersByGroup","changeMember","addMember","deleteMember","splice","changeGroup","gr","isCorrect","member","isNaN","saveGroup","Modal","onClose","aria-describedby","wrap","accept","file","files","toLowerCase","check","reader","FileReader","onload","evt","bstr","wb","XLSX","read","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","trim","readAsBinaryString","uploadXlsxFile","htmlFor","alt","InputProps","startAdornment","changeName","onKeyDown","keyCode","setMemberByKeyDown","InputLabelProps","shrink","error","helperText","autoFocus","maxLength","SaveSnackbar","onClickFun","modifiedDateStr","Snackbar","anchorOrigin","vertical","horizontal","Loading","CircularProgress","UserAnswer","setScore","isFinished","Fragment","fullScore","onBlur","handleScoreChange","placeholder","StudentQuestion","setStatus","question","scoreText","setScoreText","eachAnswer","setEachAnswer","saveEachAnswer","str","questionContent","Assignment","answerState","saveAnswerFunc","params","asId","mutex","addEventListener","navigator","platform","metaKey","ctrlKey","saveAnswers","transFormAnswer","Object","keys","qId","meta","modifiedAt","assignmentInfo","PropAssignment","setAnswersDict","setSelectedQues","selectedStus","setSelectedStus","saveAnswerFun","dict","xs","stus","NotExistComponent","ErrorComponent","questionsSet","Set","has","studentId","stuidx","getQueryResult","Setting","SetAssignment","setLecture","setAssignId","setAssignName","setAssignInfo","setInitAssignInfo","setPublishingTime","setDeadline","setQuestions","setStudents","split","publishingTime","getData","SetMember","deleteGroupFunc","addGroup","Error","Admin","useForm","register","handleSubmit","errors","watch","saveFunction","prompt","Input","defaultValue","inputRef","Switch","exampleRequired","Router","exact","Login","LayoutRouter","ProfAssignment","App","Boolean","hostname","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6df1273a.chunk.js","sourcesContent":["import axios from 'axios';\nimport crypto from 'crypto';\n\nfunction hashData(data: any) {\n\treturn crypto.createHash(\"sha256\")\n\t\t.update(Buffer.from(data, \"utf8\").toString('base64'))\n\t\t.digest(\"hex\");\n}\n\nconst getHashedPw = async (password: string) => {\n\ttry {\n\t\tconst hashToken = await axios.get('${process.env.REACT_APP_SERVER}/v1/token', { withCredentials: true });\n\t\t// token for hashing\n\t\tconst result = hashData(hashToken.data + hashData(hashData(password)));\n\n\t\treturn result;\n\t}\n\tcatch(err) {\n\t\talert(\"예기치 못한 오류가 발생하였습니다.\\n추가 정보: \" + err);\n\t}\n}\n\nexport default getHashedPw;","import { getMajorStr } from '.';\nimport jwt from 'jsonwebtoken';\nimport { UserObj } from '../Main/Type';\n\nconst getCookie = (name: string) => {\n\tconst value = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\n\treturn value? value[2] : null;\n}\n\nconst getUserInfo = () => {\n\tconst token = getCookie('access_token');\n\tif(!token) {\n\t\treturn undefined;\n\t}\n\n\t// 저장된 정보 decode\n\tconst decoded = jwt.decode(token);\n\tif(!decoded) {\n\t\treturn undefined;\n\t}\n\n\tif(typeof(decoded) === \"string\") { // 수정필요\n\t\treturn undefined;\n\t}\n\n\t// 교수, 학생 type 저장\n\tconsole.log(decoded.type);\n\tdecoded.type = String(decoded.userNumber)[0] === '1' ? 'professor' : 'student';\n\n\t// major 저장\n\tconst major = String(decoded.userNumber).substring(4,7);\n\tdecoded.major = decoded.type === 'professor' ? \"\" : getMajorStr(major);\n\n\tconst result: UserObj = {\n\t\tuserId: decoded.userId as string,\n\t\tuserName: decoded.userName ,\n\t\tuserNumber: decoded.userNumber,\n\t\tmajor: decoded.major,\n\t\ttype: decoded.type,\n\t}\n\t\n\tconsole.log(decoded);\n\treturn result ? result : undefined;\n}\n\nexport default getUserInfo;","import { AssignmentObj, SortedAssignObj } from \"../Main/Type\";\n\nconst getSortedAssign = (assignment: Array<AssignmentObj>, type: string): SortedAssignObj => {\n\t// 0 : 공개 전 / 1 : 제출 중 / 2: 채점 중 / 3 : 채점 완료\n\t// 교수 => 2 > 0 > 1 > 3\n\t// 학생 => 1 > 3 > 2 > 0\n\n\tconst obj: SortedAssignObj = [[], [], [], []];\n\tif (type === 'professor') {\n\t\t// 교수이면\n\t\tassignment.forEach((as: AssignmentObj) => {\n\t\t\tswitch (as.assignmentState) {\n\t\t\tcase 2:\n\t\t\t\tobj[0].push(as);\n\t\t\t\tbreak;\n\t\t\tcase 0:\n\t\t\t\tobj[1].push(as);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tobj[2].push(as);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tobj[3].push(as);\n\t\t\t}\n\t\t})\n\t} else if (type === 'student'){\n\t\t// 학생이면\n\t\tassignment.forEach((as: AssignmentObj) => {\n\t\t\tswitch (as.assignmentState) {\n\t\t\tcase 1:\n\t\t\t\tobj[0].push(as);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tobj[1].push(as);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tobj[2].push(as);\n\t\t\t\tbreak;\n\t\t\tcase 0:\n\t\t\t\tobj[3].push(as);\n\t\t\t}\n\t\t})\n\t}\n\treturn obj;\n}\n\nexport default getSortedAssign;\n","const colorState = [{\n\tstudentState: '제출 중인 과제',\n\tprofessorState: '채점 중인 과제',\n\tcolor: 'red',\n}, {\n\tstudentState: '채점 완료된 과제',\n\tprofessorState: '공개 전 과제',\n\tcolor: 'orange',\n}, {\n\tstudentState: '채점 중인 과제',\n\tprofessorState: '제출 중인 과제',\n\tcolor: 'green',\n}, {\n\tstudentState: '공개 전 과제',\n\tprofessorState: '채점 완료된 과제',\n\tcolor: 'gray',\n}]\n\nconst getColorState = (index: number) => {\n\treturn colorState[index];\n}\n\nexport default getColorState;","export const compareElements = (a, b, orderBy) => {\n\tif (a[orderBy] < b[orderBy])\n\t\treturn -1;\n\telse if (a[orderBy] > b[orderBy])\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\n\nconst sortRows = (rows, order, orderBy) => {\n\tconst mappedList = rows.map((element, index) => [element, index]);\n\tmappedList.sort((a, b) => {\n\t\tconst compared = compareElements(a[0], b[0], orderBy);\n\t\treturn order === \"asc\" ? compared : -compared;\n\t});\n\treturn mappedList.map((el) => el[0]);\n}\n\nexport default sortRows;","const modifiedDateToString = (date : Date | undefined) => {\n\tif (date === undefined)\n\t\treturn \"\";\n\tif (typeof(date) === \"string\")\n\t\tdate = new Date(date);\n\n\tconst dateStr = date.getFullYear() + \"-\" \n                + (date.getMonth()+1 <= 9 ? \"0\" : \"\") + (date.getMonth()+1) + \"-\"\n                + (date.getDate() <= 9 ? \"0\" : \"\") + date.getDate() + \" \"\n                + (date.getHours() <= 9 ? \"0\" : \"\") + date.getHours() + \":\"\n                + (date.getMinutes() <= 9 ? \"0\" : \"\") + date.getMinutes();\n\treturn dateStr;\n};\n\nexport default modifiedDateToString;\n","type MajorType = {\n\t[n : number] : string;\n}\n\nconst majorDict : MajorType = {\n\t// 정경대학\n\t120: \"행정학과\",\n\t150: \"국제관계학과\",\n\t280: \"경제학부\",\n\t910: \"사회복지학과\",\n\t830: \"세무학과\",\n\n\t// 경영대학\n\t270: \"경영학부\",\n\n\t// 공과대학\n\t340: \"화학공학과\",\n\t430: \"기계정보공학과\",\n\t450: \"신소재공학과\",\n\t440: \"전기전자컴퓨터공학부\",\n\t860: \"토목공학과\",\n\t920: \"컴퓨터과학부\",\n\n\t// 자연과학대학\n\t520: \"환경원예학과\",\n\t540: \"수학과\",\n\t550: \"물리학과\",\n\t560: \"생명과학과\",\n\t580: \"통계학과\",\n\n\t// 인문대학\n\t610: \"영어영문학과\",\n\t620: \"국어국문학과\",\n\t630: \"국사학과\",\n\t640: \"철학과\",\n\t650: \"중국어문화학과\",\n\n\t// 도시과학대학\n\t810: \"도시행정학과\",\n\t840: \"도시사회학과\",\n\t930: \"공간정보공학과\",\n\t871: \"건축학부 (건축학)\",\n\t872: \"건축학부 (건축공학)\",\n\t873: \"도시공학과\",\n\t874: \"교통공학과\",\n\t875: \"조경학과\",\n\t890: \"환경공학부\",\n\n\t// 예술체육대학\n\t710: \"음악학과\",\n\t720: \"산업디자인학과\",\n\t730: \"환경조각학과\",\n\t/*스포츠과학과 정보 없음*/\n\n\t// 자유융합대학\n\t940: \"자유전공학부\"\n\t/*융합전공학부 정보 없음*/\n};\n\nconst getMajorStr = (majorNumber : string) => {\n\tconst major = Number(majorNumber.slice(-3));\n\tif (major in majorDict)\n\t\treturn majorDict[major];\n\telse\n\t\treturn \"학과 정보 없음\";\n}\n\nexport default getMajorStr;","import React, {\n\tcreateContext, useContext, Dispatch, useState, useEffect\n} from 'react';\nimport { getUserInfo } from '../../utils';\n\nimport { childrenObj, UserObj } from '../Type';\n\n/* user */\nconst UserState = createContext<UserObj | undefined>(undefined);\nconst UserDispatch = createContext<Dispatch<UserObj | undefined>>(() => { });\n\nexport const UserContextProvider = ({ children }: childrenObj) => {\n\tconst [user, setUser] = useState<UserObj | undefined>(undefined);\n\n\tuseEffect(() => {\n\t\tconst u = getUserInfo();\n\t\tif (u) { // cookie에 유저 존재\n\t\t\tsetUser(u);\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<UserState.Provider value={user}>\n\t\t\t<UserDispatch.Provider value={setUser}>\n\t\t\t\t{children}\n\t\t\t</UserDispatch.Provider>\n\t\t</UserState.Provider>\n\t);\n}\n\nexport function useUserState() {\n\tconst context = useContext(UserState);\n\treturn context;\n}\n\nexport function useUserDispatch() {\n\tconst context = useContext(UserDispatch);\n\treturn context;\n}\n","import React, {\n\tcreateContext, useContext, useReducer, Dispatch, useState, useEffect\n} from 'react';\nimport axios from 'axios';\nimport { childrenObj, AssignmentObj } from '../Type';\nimport { useUserState } from './UserModel';\nimport { useHistory } from 'react-router-dom';\n\n/* assignment */\n/*\nconst initialAssignment: Array<AssignmentObj> = [{\n\tassignmentId: 1,\n\tprofessor: 1999999999,\n\tstudents: [2999999999, 2017920038, 2017920001],\n\tassignmentName: \"[이산수학]이산과제1\",\n\tassignmentInfo: \"\",\n\tassignmentState: 1,\n\tpublishingTime: new Date(\"2021/02/14\"),\n\tdeadline: new Date(\"2021/02/14\"),\n\tquestions: [{\n\t\tquestionId: 1,\n\t\tquestionContent: \"문제 1입니당.\",\n\t\tfullScore: 50\n\t}, {\n\t\tquestionId: 2,\n\t\tquestionContent: \"문제 2 입니다.\",\n\t\tfullScore: 50\n\t}],\n\tmeta: {\n\t\tcreateAt: new Date(\"2021/02/14\"),\n\t\tmodifiedAt: new Date(\"2021/02/14\"),\n\t}\n}, {\n\tassignmentId: 10,\n\tprofessor: 1999999999,\n\tstudents: [2999999999, 2017920038, 2017920001],\n\tassignmentName: \"[이산수학]이산과제1\",\n\tassignmentInfo: \"이산수학 과제입니다.\",\n\tassignmentState: 1,\n\tpublishingTime: new Date(\"2021/02/14\"),\n\tdeadline: new Date(\"2021/02/14\"),\n\tquestions: [{\n\t\tquestionId: 1,\n\t\tquestionContent: \"문제 1입니당.\",\n\t\tfullScore: 50\n\t}, {\n\t\tquestionId: 2,\n\t\tquestionContent: \"문제 2 입니다.\",\n\t\tfullScore: 50\n\t}],\n\tmeta: {\n\t\tcreateAt: new Date(\"2021/02/14\"),\n\t\tmodifiedAt: new Date(\"2021/02/14\"),\n\t}\n}, {\n\tassignmentId: 2,\n\tprofessor: 1999999999,\n\tstudents: [2999999999, 2017920038, 2017920001],\n\tassignmentName: \"[이산수학]이산과제2\",\n\tassignmentInfo: \"이산수학 과제입니다.\",\n\tassignmentState: 0,\n\tpublishingTime: new Date(\"2021/02/14\"),\n\tdeadline: new Date(\"2021/02/14\"),\n\tquestions: [{\n\t\tquestionId: 1,\n\t\tquestionContent: \"문제 1입니당.\",\n\t\tfullScore: 50\n\t}, {\n\t\tquestionId: 2,\n\t\tquestionContent: \"문제 2 입니다.\",\n\t\tfullScore: 50\n\t}],\n\tmeta: {\n\t\tcreateAt: new Date(\"2021/02/14\"),\n\t\tmodifiedAt: new Date(\"2021/02/14\"),\n\t}\n}, {\n\tassignmentId: 3,\n\tprofessor: 1999999999,\n\tstudents: [2999999999, 2017920038, 2017920001],\n\tassignmentName: \"[이산수학]이산과제3\",\n\tassignmentInfo: \"이산수학 과제입니다.\",\n\tassignmentState: 2,\n\tpublishingTime: new Date(\"2021/02/14\"),\n\tdeadline: new Date(\"2021/02/14\"),\n\tquestions: [{\n\t\tquestionId: 1,\n\t\tquestionContent: \"문제 1입니당.\",\n\t\tfullScore: 50\n\t}, {\n\t\tquestionId: 2,\n\t\tquestionContent: \"문제 2 입니다.\",\n\t\tfullScore: 50\n\t}],\n\tmeta: {\n\t\tcreateAt: new Date(\"2021/02/14\"),\n\t\tmodifiedAt: new Date(\"2021/02/14\"),\n\t}\n}, {\n\tassignmentId: 3,\n\tprofessor: 1999999999,\n\tstudents: [2999999999, 2017920038, 2017920001],\n\tassignmentName: \"[이산수학]이산과제3\",\n\tassignmentInfo: \"이산수학 과제입니다.\",\n\tassignmentState: 3,\n\tpublishingTime: new Date(\"2021/02/14\"),\n\tdeadline: new Date(\"2021/02/14\"),\n\tquestions: [{\n\t\tquestionId: 1,\n\t\tquestionContent: \"문제 1입니당.\",\n\t\tfullScore: 50\n\t}, {\n\t\tquestionId: 2,\n\t\tquestionContent: \"문제 2 입니다.\",\n\t\tfullScore: 50\n\t}],\n\tmeta: {\n\t\tcreateAt: new Date(\"2021/02/14\"),\n\t\tmodifiedAt: new Date(\"2021/02/14\"),\n\t}\n}];\n*/\n\nconst SelectedState = createContext<number | undefined>(undefined);\nconst SelectedDispatch = createContext<Dispatch<number | undefined>>(() => { });\nconst SelectedAssignState = createContext<AssignmentObj | undefined>(undefined);\nconst AssignmentState = createContext<Array<AssignmentObj>>([]);\nconst AssignmentDispatch = createContext<Dispatch<Array<AssignmentObj>>>(() => { });\n\n\nexport const AssignmentContextProvider = ({ children }: childrenObj) => {\n\tconst [selected, setSelected] = useState<number | undefined>(0);\n\t// 선택한 과제의 id 저장\n\t// 곳곳에서 && 줄이기 위해서 선택된 assignment를 context로 정의하는 것이 나음\n\tconst [selectedAssign, setSelectedAssign] = useState<AssignmentObj | undefined>(undefined);\n\tconst [assignment, setAssignment] = useState<Array<AssignmentObj>>([]);\n\n\tconst user = useUserState();\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\t// 처음에 user가 setting되면 assignment 목록 받아오기\n\t\tuser && fetchAssignment();\n\t}, [user]);\n\n\tuseEffect(() => {\n\t\tif(selected && assignment){\n\t\t\tassignment.forEach((as) => {\n\t\t\t\tif(as.assignmentId === selected){\n\t\t\t\t\tsetSelectedAssign(as);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\telse\n\t\t\tsetSelectedAssign(undefined);\n\t}, [assignment, selected]);\n\n\n\tconst fetchAssignment = () => {\n\t\tconsole.log(\"fetchAssignment\");\n\t\taxios.get('${process.env.REACT_APP_SERVER}/v1/assignment', { withCredentials: true })\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tsetAssignment(res.data);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconst status = err?.response?.status;\n\t\t\t\tif (status === undefined) {\n\t\t\t\t\talert(\"과제 정보를 얻는 중 예기치 못한 오류가 발생하였습니다.\" );\n\t\t\t\t}\n\t\t\t\telse if (status === 400) {\n\t\t\t\t\talert(`과제 정보를 얻는데 실패하였습니다. 잘못된 요청입니다. (${status})`);\n\t\t\t\t}\n\t\t\t\telse if (status === 401) {\n\t\t\t\t\talert(`토큰이 유효하지 않습니다. (${status})`);\n\t\t\t\t\tdocument.cookie = \"access_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t}\n\t\t\t\telse if (status === 404) {\n\t\t\t\t\talert(\"과제를 찾을 수 없습니다.\");\n\t\t\t\t}\n\t\t\t\telse if (status === 500) {\n\t\t\t\t\talert(\"내부 서버 오류입니다. 잠시 후에 다시 시도해주세요...\");\n\t\t\t\t}\n\t\t\t\tsetAssignment([]);\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<AssignmentState.Provider value={assignment}>\n\t\t\t<AssignmentDispatch.Provider value={setAssignment}>\n\t\t\t\t<SelectedDispatch.Provider value={setSelected}>\n\t\t\t\t\t<SelectedState.Provider value={selected}>\n\t\t\t\t\t\t<SelectedAssignState.Provider value={selectedAssign}>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</SelectedAssignState.Provider>\n\t\t\t\t\t</SelectedState.Provider>\n\t\t\t\t</SelectedDispatch.Provider>\n\t\t\t</AssignmentDispatch.Provider>\n\t\t</AssignmentState.Provider>\n\t);\n}\n\nexport function useAssignmentState() {\n\tconst context = useContext(AssignmentState);\n\treturn context;\n}\n\nexport function useAssignmentDispatch() {\n\tconst context = useContext(AssignmentDispatch);\n\treturn context;\n}\n\nexport function useSelectedState() {\n\tconst context = useContext(SelectedState);\n\treturn context;\n}\n\nexport function useSelectedDispatch() {\n\tconst context = useContext(SelectedDispatch);\n\treturn context;\n}\n\nexport function useSelectedAssignState() {\n\tconst context = useContext(SelectedAssignState);\n\treturn context;\n}\n","import React, {\n\tcreateContext, useContext, useState, Dispatch, useEffect\n} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nimport { AnswerObj, childrenObj, QuestionAnswerObj } from '../Type';\n\nimport { useUserState } from './UserModel';\nimport { useSelectedAssignState } from './AssignmentModel';\n\n/* answer */\n\nconst AnswerState = createContext<QuestionAnswerObj[]>([]);\nconst AnswerDispatch = createContext<Dispatch<QuestionAnswerObj[]>>(() => { });\nconst SaveAnswer = createContext<(answer : Array<AnswerObj>) => void>(() => { });\n\nexport const AnswerContextProvider = ({ children }: childrenObj) => {\n\tconst [answer, setAnswer] = useState<QuestionAnswerObj[]>([]);\n\tconst user = useUserState();\n\tconst selectedAssign = useSelectedAssignState();\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\t// select된 과제가 바뀌면 answer 바꾸기\n\t\tselectedAssign &&\n\t\tfetchAnswer();\n\t}, [user, selectedAssign]);\n\n\tconst fetchAnswer = async () => {\n\t\tconsole.log(\"fetchAnswer\");\n\n\t\tif(!(selectedAssign && user)){\n\t\t\tsetAnswer([]);\n\t\t\treturn;\t\n\t\t}\n\n\t\taxios.get(`${process.env.REACT_APP_SERVER}/v1/answer/${selectedAssign.assignmentId}`, { withCredentials: true })\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tsetAnswer(res.data);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconst status = err?.response?.status;\n\t\t\t\tif (status === undefined) {\n\t\t\t\t\talert(\"답안 정보를 얻는 중 예기치 못한 오류가 발생하였습니다.\" );\n\t\t\t\t}\n\t\t\t\telse if (status === 400) {\n\t\t\t\t\talert(`답안 정보를 얻는데 실패하였습니다. 잘못된 요청입니다. (${status})`);\n\t\t\t\t}\n\t\t\t\telse if (status === 401) {\n\t\t\t\t\talert(`토큰이 유효하지 않습니다. (${status})`);\n\t\t\t\t\tdocument.cookie = \"access_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t}\n\t\t\t\telse if (status === 404) {\n\t\t\t\t\talert(\"답안을 찾을 수 없습니다.\");\n\t\t\t\t}\n\t\t\t\telse if (status === 500) {\n\t\t\t\t\talert(\"내부 서버 오류입니다. 잠시 후에 다시 시도해주세요...\");\n\t\t\t\t}\n\t\t\t\tsetAnswer([]);\n\t\t\t});\n\t}\n\n\tconst saveAnswer = (ans : Array<AnswerObj>) => {\n\t\tconsole.log(\"saveAnswer\");\n\n\t\tif(!(selectedAssign && user)){\n\t\t\tconsole.log(\"set answer undefined in model\");\n\t\t\tsetAnswer([]);\n\t\t\treturn;\n\t\t}\n\t\tif(user.type === 'student') {\n\t\t\taxios.post(`${process.env.REACT_APP_SERVER}/v1/answer/${selectedAssign.assignmentId}`, {\n\t\t\t\tanswers : ans\n\t\t\t}, { withCredentials: true })\n\t\t\t\t.then(res => {\n\t\t\t\t\tconsole.log(res);\n\t\t\t\t\tsetAnswer([res.data]);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconst status = err?.response?.status;\n\t\t\t\t\tif (status === undefined) { \n\t\t\t\t\t\talert(\"과제 정보를 얻는 중 예기치 못한 예외가 발생하였습니다. (Main.js)\\n\" + JSON.stringify(err));\n\t\t\t\t\t}\n\t\t\t\t\telse if (status === 400) {\n\t\t\t\t\t\talert(`과제 정보를 얻는데 실패하였습니다. 잘못된 요청입니다. (${status})`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (status === 401) {\n\t\t\t\t\t\talert(`토큰이 유효하지 않습니다. (${status})`);\n\t\t\t\t\t\tdocument.cookie = \"access_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n\t\t\t\t\t\t// window.location.href = `${window.location.origin}`;\n\t\t\t\t\t}\n\t\t\t\t\telse if (status === 404) {\n\t\t\t\t\t\t// 단순히 입력한 답안이 없는 경우이므로 오류는 아님.\n\t\t\t\t\t\t// api 수정 필요\n\t\t\t\t\t}\n\t\t\t\t\telse if (status === 500) {\n\t\t\t\t\t\talert(\"내부 서버 오류입니다. 잠시 후에 다시 시도해주세요...\");\n\t\t\t\t\t}\n\t\t\t\t\tsetAnswer([]);\n\t\t\t\t});\n\t\t}\n\t\telse { // 채점\n\t\t\tconsole.log(ans);\n\t\t\taxios.post(`${process.env.REACT_APP_SERVER}/v1/answer/${selectedAssign.assignmentId}`, {\n\t\t\t\tanswers : ans\n\t\t\t}, { withCredentials: true })\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconsole.log(res.data);\n\t\t\t\t\tsetAnswer(res.data);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconst status = err?.response?.status;\n\t\t\t\t\tif (status === undefined) { \n\t\t\t\t\t\talert(\"과제 정보를 얻는 중 예기치 못한 예외가 발생하였습니다. (Main.js)\\n\" + JSON.stringify(err));\n\t\t\t\t\t}\n\t\t\t\t\telse if (status === 400) {\n\t\t\t\t\t\talert(`과제 정보를 얻는데 실패하였습니다. 잘못된 요청입니다. (${status})`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (status === 401) {\n\t\t\t\t\t\talert(`토큰이 유효하지 않습니다. (${status})`);\n\t\t\t\t\t\tdocument.cookie = \"access_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n\t\t\t\t\t// window.location.href = `${window.location.origin}`;\n\t\t\t\t\t}\n\t\t\t\t\telse if (status === 404) {\n\t\t\t\t\t// 단순히 입력한 답안이 없는 경우이므로 오류는 아님.\n\t\t\t\t\t// api 수정 필요\n\t\t\t\t\t}\n\t\t\t\t\telse if (status === 500) {\n\t\t\t\t\t\talert(\"내부 서버 오류입니다. 잠시 후에 다시 시도해주세요...\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\n\t\t}\n\t}\n\n\treturn (\n\t\t<AnswerState.Provider value={answer}>\n\t\t\t<AnswerDispatch.Provider value={setAnswer}>\n\t\t\t\t<SaveAnswer.Provider value={saveAnswer}>\n\t\t\t\t\t{children}\n\t\t\t\t</SaveAnswer.Provider>\n\t\t\t</AnswerDispatch.Provider>\n\t\t</AnswerState.Provider>\n\t);\n}\n\nexport function useAnswerState() {\n\tconst context = useContext(AnswerState);\n\treturn context;\n}\n\nexport function useAnswerDispatch() {\n\tconst context = useContext(AnswerDispatch);\n\treturn context;\n}\n\nexport function saveAnswer() {\n\tconst context = useContext(SaveAnswer);\n\treturn context;\n}\n\n","import React, {\n\tcreateContext, useContext, useState, Dispatch, useEffect\n} from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nimport { childrenObj, GroupObj, RequestGroupObj } from '../Type';\nimport { useUserState } from './UserModel';\n\n/* group */\n\nconst GroupState = createContext<Array<GroupObj>>([]);\nconst GroupDispatch = createContext<Dispatch<Array<GroupObj>>>(() => { });\nconst FetchGroup = createContext<() => void>(()=>{});\nconst SaveGroup = createContext<(group : RequestGroupObj) => void>(()=>{});\nconst DeleteGroup = createContext<(groupId : number) => void>(()=>{});\n\n\nexport const GroupContextProvider = ({ children }: childrenObj) => {\n\tconst [group, setGroup] = useState<Array<GroupObj>>([]);\n\tconst user = useUserState();\n\tconst history = useHistory();\n\n\tuseEffect(()=>{\n\t\t// professor만 group setting\n\t\tif(user && user.type === 'professor')\n\t\t\tfetchGroup();\n\t\telse\n\t\t\tsetGroup([]);\n\t}, [user]);\n\n\tconst fetchGroup = () => {\n\t\taxios.get('${process.env.REACT_APP_SERVER}/v1/student', { withCredentials: true })\n\t\t\t.then(res => {\n\t\t\t\tsetGroup(res.data);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconst status = err?.response?.status;\n\t\t\t\tif (status === undefined) {\n\t\t\t\t\talert(\"그룹 정보를 얻는 중 예기치 못한 오류가 발생하였습니다.\" );\n\t\t\t\t}\n\t\t\t\telse if (status === 400) {\n\t\t\t\t\talert(`그룹 정보를 얻는데 실패하였습니다. 잘못된 요청입니다. (${status})`);\n\t\t\t\t}\n\t\t\t\telse if (status === 401) {\n\t\t\t\t\talert(`토큰이 유효하지 않습니다. (${status})`);\n\t\t\t\t\tdocument.cookie = \"access_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t}\n\t\t\t\telse if (status === 404) {\n\t\t\t\t\talert(\"그룹을 찾을 수 없습니다.\");\n\t\t\t\t}\n\t\t\t\telse if (status === 500) {\n\t\t\t\t\talert(\"내부 서버 오류입니다. 잠시 후에 다시 시도해주세요...\");\n\t\t\t\t}\n\t\t\t\tsetGroup([]);\n\t\t\t});\n\t}\n\n\tconst saveGroup = (group : RequestGroupObj) => {\n\t\taxios.post('${process.env.REACT_APP_SERVER}/v1/student', {\n\t\t\t...group\n\t\t}, { withCredentials: true })\n\t\t\t.then(res => {\n\t\t\t\tfetchGroup();\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconst status = err?.response?.status;\n\t\t\t\tif (status === undefined) {\n\t\t\t\t\talert(\"그룹 정보를 저장하던 중 예기치 못한 오류가 발생하였습니다.\" );\n\t\t\t\t}\n\t\t\t\telse if (status === 400) {\n\t\t\t\t\talert(`그룹 정보를 저장하는데에 실패하였습니다. 잘못된 요청입니다. (${status})`);\n\t\t\t\t}\n\t\t\t\telse if (status === 401) {\n\t\t\t\t\talert(`토큰이 유효하지 않습니다. (${status})`);\n\t\t\t\t\tdocument.cookie = \"access_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t}\n\t\t\t\telse if (status === 404) {\n\t\t\t\t\talert(\"그룹을 저장할 수 없습니다.\");\n\t\t\t\t}\n\t\t\t\telse if (status === 500) {\n\t\t\t\t\talert(\"내부 서버 오류입니다. 잠시 후에 다시 시도해주세요...\");\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tconst deleteGroup = (groupId : number) => {\n\t\taxios.delete(`${process.env.REACT_APP_SERVER}/v1/student/${groupId}`, { withCredentials: true })\n\t\t\t.then(() => {\n\t\t\t\tfetchGroup();\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconst status = err?.response?.status;\n\t\t\t\tif (status === undefined) {\n\t\t\t\t\talert(\"그룹 정보를 삭제하던 중 예기치 못한 오류가 발생하였습니다.\" );\n\t\t\t\t}\n\t\t\t\telse if (status === 400) {\n\t\t\t\t\talert(`그룹 정보를 삭제하는 데에 실패하였습니다. 잘못된 요청입니다. (${status})`);\n\t\t\t\t}\n\t\t\t\telse if (status === 401) {\n\t\t\t\t\talert(`토큰이 유효하지 않습니다. (${status})`);\n\t\t\t\t\tdocument.cookie = \"access_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t}\n\t\t\t\telse if (status === 404) {\n\t\t\t\t\talert(\"그룹을 삭제할 수 없습니다.\");\n\t\t\t\t}\n\t\t\t\telse if (status === 500) {\n\t\t\t\t\talert(\"내부 서버 오류입니다. 잠시 후에 다시 시도해주세요...\");\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<GroupState.Provider value={group}>\n\t\t\t<GroupDispatch.Provider value={setGroup}>\n\t\t\t\t<FetchGroup.Provider value={fetchGroup}>\n\t\t\t\t\t<SaveGroup.Provider value={saveGroup}>\n\t\t\t\t\t\t<DeleteGroup.Provider value={deleteGroup}>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</DeleteGroup.Provider>\n\t\t\t\t\t</SaveGroup.Provider>\n\t\t\t\t</FetchGroup.Provider>\n\t\t\t</GroupDispatch.Provider>\n\t\t</GroupState.Provider>\n\t);\n}\n\nexport function useGroupState() {\n\tconst context = useContext(GroupState);\n\treturn context;\n}\n\nexport function useGroupDispatch() {\n\tconst context = useContext(GroupDispatch);\n\treturn context;\n}\n\nexport function fetchGroup() {\n\tconst context = useContext(FetchGroup);\n\treturn context;\n}\n\nexport function useSaveGroup() {\n\tconst context = useContext(SaveGroup);\n\treturn context;\n}\n\nexport function useDeleteGroup() {\n\tconst context = useContext(DeleteGroup);\n\treturn context;\n}","import React, {\n\tcreateContext, Dispatch, useContext, useEffect, useState\n} from 'react';\nimport axios from 'axios';\n\nimport { childrenObj, MessageObj } from '../Type';\n\nconst MessageState = createContext<string>(\"\");\nconst MessageDispatch = createContext<Dispatch<string>>(() => { });\nconst OnOffState = createContext<boolean>(false);\nconst OnOffDispatch = createContext<Dispatch<boolean>>(() => { });\nconst SaveMessage = createContext<(msg: string, onff: boolean) => void>(() => { });\n\nexport const MessageContextProvider = ({ children }: childrenObj) => {\n\tconst [message, setMessage] = useState<string>(\"\");\n\tconst [onOff, setOnOff] = useState<boolean>(false);\n\n\tconst fetchMSG = () => {\n\t\taxios.get(\"${process.env.REACT_APP_SERVER}/v1/message\")\n\t\t\t.then(res => {\n\t\t\t\tsetMessage(res.data.message);\n\t\t\t\tsetOnOff(res.data.onOff);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconst status = err?.response?.status;\n\t\t\t\tif (status === undefined) {\n\t\t\t\t\talert(\"그룹 정보를 얻는 중 예기치 못한 예외가 발생하였습니다. (Main.js)\\n\" + JSON.stringify(err));\n\t\t\t\t}\n\t\t\t\telse if (status === 404) {\n\t\t\t\t\talert(\"메세지를 찾을 수 없습니다. 직접 생성해주세요.\");\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\t// 처음에 메세지 받아오기\n\t\tfetchMSG();\n\t}, [])\n\n\tconst saveMessage = (msg: string, onff: boolean) => {\n\t\taxios.post(\"${process.env.REACT_APP_SERVER}/v1/message\", {\n\t\t\tmessage: msg,\n\t\t\tonOff: onff\n\t\t}).then(res => {\n\t\t\tconst data : MessageObj = res.data;\n\t\t\tsetMessage(data.message);\n\t\t\tsetOnOff(data.onOff);\n\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconst status = err?.response?.status;\n\t\t\t\tif (status === undefined) {\n\t\t\t\t\talert(\"그룹 정보를 얻는 중 예기치 못한 예외가 발생하였습니다. (Main.js)\\n\" + JSON.stringify(err));\n\t\t\t\t}\n\t\t\t\telse if (status === 404) {\n\t\t\t\t\talert(\"메세지를 찾을 수 없습니다. 직접 생성해주세요.\");\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<MessageState.Provider value={message}>\n\t\t\t<MessageDispatch.Provider value={setMessage}>\n\t\t\t\t<OnOffState.Provider value={onOff}>\n\t\t\t\t\t<OnOffDispatch.Provider value={setOnOff}>\n\t\t\t\t\t\t<SaveMessage.Provider value={saveMessage}>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</SaveMessage.Provider>\n\t\t\t\t\t</OnOffDispatch.Provider>\n\t\t\t\t</OnOffState.Provider>\n\t\t\t</MessageDispatch.Provider>\n\t\t</MessageState.Provider>\n\t);\n}\n\nexport function useMessageState() {\n\tconst context = useContext(MessageState);\n\treturn context;\n}\nexport function useMessageDispatch() {\n\tconst context = useContext(MessageDispatch);\n\treturn context;\n}\nexport function useOnOffState() {\n\tconst context = useContext(OnOffState);\n\treturn context;\n}\nexport function useOnOffDispatch() {\n\tconst context = useContext(OnOffDispatch);\n\treturn context;\n}\nexport function saveMessage() {\n\tconst context = useContext(SaveMessage);\n\treturn context;\n}\n\n","import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport crypto from 'crypto';\nimport { useHistory } from \"react-router-dom\";\nimport { withCookies, Cookies } from 'react-cookie';\n\nimport { Grid, TextField, Button, Typography, Paper, Link, Checkbox, FormControlLabel, Divider, hslToRgb } from '@material-ui/core';\n\nimport { getHashedPw, getUserInfo } from '../utils';\nimport { useUserState, useUserDispatch} from '../Main/Model/UserModel';\nimport { useAssignmentDispatch } from '../Main/Model/AssignmentModel';\n\ntype Props = {\n\tcookies: Cookies;\n}\nconst Login: React.FunctionComponent<Props> = (props) => {\n\tconst [cookies, setCookies] = useState<any>(props.cookies);\n\tconst [id, setId] = useState<string>(\"\");\n\tconst [pw, setPw] = useState<string>(\"\");\n\tconst [btnText, setBtnText] = useState<string>(\"LOGIN\");\n\tconst [checked, setChecked] = useState<boolean>(false);\n\tconst history = useHistory();\n\tconst user = useUserState();\n\tconst setUser = useUserDispatch(); // dispatch => setUser\n\tconst asDispatch = useAssignmentDispatch();\n\n\tuseEffect(() => {\n\t\t// 이미 user가 설정되어있으면 main으로\n\t\tuser && history.replace('/main');\n\t},[user]);\n\n\tuseEffect(() => {\n\t\t// cookie에 저장되어있는 아이디 불러오기 (자동 로그인)\n\t\tif (cookies) {\n\t\t\tconst savedId = cookies.get(\"savedId\");\n\t\t\tif (savedId) {\n\t\t\t\tsetId(String(savedId));\n\t\t\t\tsetChecked(true);\n\t\t\t}\n\t\t} else {\n\t\t\tsetCookies(props.cookies);\n\t\t}\n\t}, [props.cookies]);\n\n\tconst loginAsTestProfessorCookie = async () => {\n\t\ttry {\n\t\t\tconst result = await axios.get('${process.env.REACT_APP_SERVER}/v1/cookieTest', { withCredentials: true });\n\t\t\tif(result.status === 200) {\n\t\t\t\tsetUser(getUserInfo());\n\t\t\t\thistory.replace('/main');\n\t\t\t}\n\t\t} catch(err) {\n\t\t\talert(\"내부 서버 오류입니다. 잠시만 기다려주세요.\");\n\t\t}\n\t};\n\n\tconst loginAsTestStudentCookie = async () => { \n\t\ttry {\n\t\t\tconst result = await axios.get('${process.env.REACT_APP_SERVER}/v1/cookieTestB', { withCredentials: true });\n\t\t\tif(result.status === 200) {\n\t\t\t\tsetUser(getUserInfo());\n\t\t\t\thistory.replace('/main');\n\t\t\t}\n\t\t} catch(err) {\n\t\t\talert(\"내부 서버 오류입니다. 잠시만 기다려주세요.\");\n\t\t}\n\t};\n\n\tconst handleLoginSubmit = async (e: React.FormEvent) => {\n\t\te.preventDefault();\n\t\tsetBtnText(\"로그인 중...\");\n\t\tconst hashedPw = getHashedPw(pw);\n\n\t\ttry {\n\t\t\tconst result = await axios.post('${process.env.REACT_APP_SERVER}/v1/login', {\n\t\t\t\tuserId: id,\n\t\t\t\tuserPw: hashedPw,\n\t\t\t}, { withCredentials: true});\n\n\t\t\tif(result) {\n\t\t\t\t// set the cookie if user checked save id\n\t\t\t\tchecked ? cookies.set(\"savedId\", id, { path: '/'}) : cookies.remove(\"savedId\", { path: '/'});\n\t\t\t\tconst u = getUserInfo();\n\t\t\t\tif (u) { // cookie에 유저 존재\n\t\t\t\t\tsetUser(u);\n\t\t\t\t}\n\t\t\t\thistory.replace('/main');\n\t\t\t\t\n\t\t\t\t/*\n\t\t\t\tuser setting되면 자동으로 useEffect 호출됨\n\t\t\t\t// set assignment when user login\n\t\t\t\tasDispatch({\n\t\t\t\t\ttype: 'FETCH'\n\t\t\t\t});\n\t\t\t\t*/\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tconst { status } = err.response;\n\t\t\tif(!status) {\n\t\t\t\talert(\"로그인 하는 중 예기치 못한 예외가 발생하였습니다.\\n\" + JSON.stringify(err));\n\t\t\t}\n\t\t\telse if(status === 400) {\n\t\t\t\talert(\"아이디, 패스워드가 기입되었는지 다시 한 번 확인해주세요.\");\n\t\t\t}\n\t\t\telse if(status === 403) {\n\t\t\t\talert(\"아이디, 패스워드가 정확히 기입되었는지 다시 한 번 확인해주세요.\");\n\t\t\t}\n\t\t\telse if(status >= 500) {\n\t\t\t\talert(\"내부 서버 오류입니다. 잠시만 기다려주세요.\");\n\t\t\t}\n\t\t\tsetBtnText('Login');\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"Login\">\n\t\t\t<Paper elevation={3} className=\"login_paper\">\n\t\t\t\t<Grid container alignItems=\"center\" justify=\"center\" className=\"login_container\" direction=\"column\">\n\t\t\t\t\t<div className=\"login_logo\"><img src=\"./img/logo_new.png\"></img></div>\n\t\t\t\t\t<Typography className=\"login_subtitle\" variant=\"caption\">서울시립대학교 컴퓨터과학부 과제 제출 플랫폼</Typography>\n\n\t\t\t\t\t<div className=\"login_sign\">\n\t\t\t\t\t\t<Link href=\"https://rabums.csuos.ml/\">RABUMS</Link>\n\t\t\t\t\t\t<Typography variant=\"subtitle1\">계정으로 로그인하세요.</Typography>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<form className=\"login__form\" onSubmit={handleLoginSubmit}>\n\t\t\t\t\t\t<TextField variant=\"outlined\" id=\"userId\" label=\"RABUMS ID\" required rows={1} rowsMax={10} onChange={(e) => setId(e.target.value)} value={id} />\n\t\t\t\t\t\t<TextField variant=\"outlined\" id=\"userPw\" label=\"RABUMS PW\" type=\"password\" required rows={1} rowsMax={10} onChange={(e) =>  setPw(e.target.value)} value={pw} />\n\t\t\t\t\t\t<FormControlLabel control={\n\t\t\t\t\t\t\t<Checkbox checked={checked} onChange={(e) => { setChecked(e.target.checked) }} color=\"secondary\"></Checkbox>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlabel=\"아이디 저장\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<div className=\"regiter_sign\">\n\t\t\t\t\t\t\t<Link href=\"https://rabums.csuos.ml/register\">RABUMS 계정이 없으신가요?</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button className=\"login_button\" size=\"large\" variant=\"outlined\" type=\"submit\">{btnText}</Button>\n\t\t\t\t\t</form>\n\t\t\t\t\t<div className=\"login_divider\">\n\t\t\t\t\t\t<Divider orientation=\"horizontal\" variant=\"middle\"></Divider>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Typography variant=\"subtitle2\">회원가입하지 않고 체험용 계정으로 로그인할 수 있습니다!</Typography>\n\n\t\t\t\t\t<Grid>\n\t\t\t\t\t\t<Button className=\"login_test\" variant=\"outlined\" onClick={loginAsTestProfessorCookie}>교수 계정 체험</Button>\n\t\t\t\t\t\t<Button className=\"login_test\" variant=\"outlined\" onClick={loginAsTestStudentCookie}>학생 계정 체험</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Paper>\n\t\t</div>\n\t)\n};\n\nexport default withCookies(Login);\n","import React, { ReactNode } from 'react';\nimport clsx from 'clsx';\n\nimport { Grid, SvgIcon, Typography } from '@material-ui/core';\n\nimport { isStringBlank } from '../utils/checkString';\n\ntype Props = {\n\tclassName?: string; \n\ticon: string;\n\tmainTitle: string;\n\tsubTitle?: string;\n\tinformation?: ReactNode;\n\trightSide?: ReactNode;\n}\n\nconst PageInfo: React.FunctionComponent<Props> = ({className, icon, mainTitle, subTitle, information, rightSide}) => (\n\t<Grid className={clsx(\"page-info\", className)}>\n\t\t<Grid className=\"page-info-con\">\n\t\t\t<Grid className=\"page-title-con\">\n\t\t\t\t<Typography className=\"icon\" variant=\"h2\">{icon}</Typography>\n\t\t\t\t<Grid className=\"title\">\n\t\t\t\t\t<Typography variant=\"h3\">{mainTitle}</Typography>\n\t\t\t\t\t<Typography variant=\"h6\">{subTitle}</Typography>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t{\n\t\t\t\trightSide &&\n\t\t\t\t<Grid className=\"right-side\">\n\t\t\t\t\t{rightSide}\n\t\t\t\t</Grid>\n\t\t\t}\n\t\t</Grid>\n\t\t{information && <Grid item className=\"page-information\">{information}</Grid>}\n\t</Grid>\n)\n\nexport default PageInfo;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\n\nimport { Grid, Paper } from '@material-ui/core';\n\ntype Props = {\n\ttype: string;\n\tasInfo: any; // asInfo: Assignment;\n\tstate: {\n\t\tstudentState: string,\n\t\tprofessorState: string,\n\t\tcolor: string\n\t}\n}\nconst AssignmentBox: React.FunctionComponent<Props> = ({type, asInfo, state}) => {\n\tconst date = new Date(asInfo.deadline);\n\tconst deadline = date.getFullYear() + \"-\"  + (date.getMonth()+1 <= 9 ? \"0\" : \"\") + (date.getMonth()+1) + \"-\" + (date.getDate() <= 9 ? \"0\" : \"\") + date.getDate() + \" \" + (date.getHours() <= 9 ? \"0\" : \"\") + date.getHours() + \":\" + (date.getMinutes() <= 9 ? \"0\" : \"\") + date.getMinutes()\n\n\treturn (\n\t\t<Link to ={`/as/${asInfo.assignmentId}`}>\n\t\t\t<Paper className=\"assignment-box\" elevation={3}>\n\t\t\t\t<Grid className=\"a-box-header\">\n\t\t\t\t\t<Grid className=\"a-box-title\">{asInfo.assignmentName}</Grid>\n\t\t\t\t\t<Grid className={clsx(state.color, \"color\")}>{type === 'professor' ? state.professorState : state.studentState}</Grid>\n\t\t\t\t</Grid>\t\n\t\t\t\t<Grid className=\"a-box-deadline\">{deadline} 까지</Grid>\n\t\t\t</Paper>\n\t\t</Link>\n\t)\n}\n\nexport default AssignmentBox;\n","import React, { useEffect, useState } from 'react';\n\nimport { Grid } from '@material-ui/core';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nimport PageInfo from '../Components/PageInfo';\nimport AssignmentBox from '../Components/AssignmentBox';\n\nimport { useUserState } from '../Main/Model/UserModel';\nimport { useAssignmentState } from '../Main/Model/AssignmentModel';\nimport { SortedAssignObj } from '../Main/Type';\nimport { getColorState, getSortedAssign } from '../utils';\n\n// Main 페이지\ntype Props = {\n\n}\nconst Main: React.FunctionComponent<Props> = () => {\n\tconst user = useUserState();\n\tconst assignments = useAssignmentState();\n\tconst [sortedAssign, setSortedAssign] = useState<SortedAssignObj>([[],[],[],[]]);\n\n\tuseEffect(() => {\n\t\tassignments && user &&\n\t\tsetSortedAssign(getSortedAssign(assignments, user.type));\n\t}, [assignments]);\n\t\n\treturn (\n\t\t<>\n\t\t\t{(user) &&\n\t\t\t<Grid container direction=\"column\">\n\t\t\t\t<PageInfo \n\t\t\t\t\ticon={user.type === 'professor' ? \"👨🏻‍💼\" :\"👩🏻‍💻\"}\n\t\t\t\t\tmainTitle={user.userName}\n\t\t\t\t\tsubTitle={user.type === 'professor' ? `교수 / ${user.userNumber}` : `학생 / ${user.userNumber} / ${user.major}`}\n\t\t\t\t\tinformation={<p>좌측 사이드바 또는 아래 목록에서 확인하려는 과제를 선택하세요.</p>}\n\t\t\t\t/>\n\t\t\t\t<Grid container direction=\"column\" className=\"contents-container\">\n\t\t\t\t\t{\n\t\t\t\t\t\tsortedAssign && user &&\n\t\t\t\t\t\tsortedAssign.map((_, index : number) => \n\t\t\t\t\t\t\t( index === 0 || index === 1 ) &&\n\t\t\t\t\t\t\t<Grid key={index}>\n\t\t\t\t\t\t\t\t<Grid className=\"contents-title\">\n\t\t\t\t\t\t\t\t\t<h6>{user.type === 'professor' ? getColorState(index).professorState : getColorState(index).studentState}</h6>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid className=\"assignment-rootbox\">\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tsortedAssign[index].map((as) =>\t\n\t\t\t\t\t\t\t\t\t\t\t<AssignmentBox \n\t\t\t\t\t\t\t\t\t\t\t\tkey={as.assignmentId}\n\t\t\t\t\t\t\t\t\t\t\t\ttype={user.type}\n\t\t\t\t\t\t\t\t\t\t\t\tasInfo={as}\n\t\t\t\t\t\t\t\t\t\t\t\tstate={getColorState(index)}\n\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport default Main;\n","import React, { useEffect, useState, createRef } from 'react';\n\nimport { Grid, Toolbar, Badge } from \"@material-ui/core\";\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport MailIcon from '@material-ui/icons/Mail';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nimport { Header, SideBar } from '.';\nimport { useUserState } from '../Main/Model/UserModel';\nimport { useOnOffState, useMessageState } from '../Main/Model/MessageModel';\n\nconst Layout: React.FC = ({ children }) => {\n\tconst [open, useOpen] = useState<boolean>(true);\n\tconst [alertOpen, setAlertOpen] = useState<boolean>(false); // badge를 누를 때 alert가 3초간 오픈 되도록\n\tconst [clearTime, setClearTime] = useState<NodeJS.Timeout | undefined>(undefined);\n\n\tconst onOff = useOnOffState();\n\tconst message = useMessageState();\n\n\tconst user = useUserState();\n\tconst mobileRef = createRef<HTMLDivElement>();\n\n\tconst onAlert = async () => {\n\t\t// 5초 후에 꺼짐\n\t\tawait setAlertOpen(true);\n\t\tawait setClearTime(setTimeout(() => setAlertOpen(false), 3000000));\n\t};\n\n\tconst handleCloseAlert = async () => {\n\t\t// 수동으로 껐을 때, timeOut도 해지\n\t\tif (clearTime)\n\t\t\tawait clearTimeout(clearTime);\n\t\tawait setAlertOpen(false);\n\t\tawait setClearTime(undefined);\n\t}\n\n\tuseEffect(() => {\n\t\t// routing 변경 시마다 open 해지 => 모바일 떄문에\n\t\tif (mobileRef.current && mobileRef.current.offsetWidth < 768) {\n\t\t\t// 모바일이면 페이지 이동 시마다 sidebar 닫기\n\t\t\tuseOpen(false);\n\t\t}\n\t}, [window.location.href]);\n\n\treturn (\n\t\t<Grid id=\"page-con\">\n\t\t\t<div className=\"mobile-check\" ref={mobileRef} />\n\t\t\t{\n\t\t\t\tuser &&\n\t\t\t\t\t<>\n\t\t\t\t\t\t<SideBar\n\t\t\t\t\t\t\tclasses={open ? \"open-sidebar\" : \"close-sidebar\"}\n\t\t\t\t\t\t\tuseOpen={useOpen}\n\t\t\t\t\t\t\tuserType={user.type}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Grid id=\"wrap\">\n\t\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\t\tuseOpen={useOpen}\n\t\t\t\t\t\t\t\tuserName={user.userName}\n\t\t\t\t\t\t\t\tuserType={user.type}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Toolbar className=\"back-margin\" />\n\t\t\t\t\t\t\t<Grid className=\"content-wrap\">\n\t\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonOff &&\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\talertOpen ?\n\t\t\t\t\t\t\t\t\t\t<Alert id=\"alert\" severity=\"info\">\n\t\t\t\t\t\t\t\t\t\t\t<AlertTitle className=\"title\">\n\t\t\t\t\t\t\t\t\t\t\t\t공지사항\n\t\t\t\t\t\t\t\t\t\t\t\t<CancelIcon color=\"primary\" onClick={handleCloseAlert} />\n\t\t\t\t\t\t\t\t\t\t\t</AlertTitle>\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"info\">{message}</p>\n\t\t\t\t\t\t\t\t\t\t</Alert> :\n\t\t\t\t\t\t\t\t\t\t<Badge id=\"badge\" color=\"secondary\" variant=\"dot\" onClick={onAlert}>\n\t\t\t\t\t\t\t\t\t\t\t<MailIcon />\n\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t</>\n\t\t\t}\n\t\t</Grid>\n\t);\n};\n\nexport default Layout;","import React from 'react';\nimport clsx from 'clsx';\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Grid, Slide, Toolbar, IconButton, useScrollTrigger } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport { useUserDispatch } from '../Main/Model/UserModel';\n\ntype HeaderProps = {\n\topen: boolean;\n\tuseOpen: React.Dispatch<boolean>;\n\tuserName: string;\n\tuserType: string;\n}\n\nconst Header = ({ open, useOpen, userName, userType }: HeaderProps) => {\n\tconst trigger = useScrollTrigger();\n\tconst setUser = useUserDispatch();\n\tconst history = useHistory();\n\n\tconst Logout = () => {\n\t\tconst confirm = window.confirm(\"정말로 로그아웃 하시겠습니까?\");\n\n\t\tif (confirm) {\n\t\t\taxios.post('/v1/logout', { withCredentials: true })\n\t\t\t\t.then(res => {\n\t\t\t\t\tsetUser(undefined);\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\talert(\"로그아웃을 할 수 없었습니다.\");\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t});\n\t\t}\n\t}\n\n\treturn (\n\t\t<Slide appear={false} direction=\"down\" in={!trigger}>\n\t\t\t<Grid className={clsx(open ? \"small-header\" : \"wide-header\", \"header\")}>\n\t\t\t\t<Grid className=\"tool-bar\">\n\t\t\t\t\t{\n\t\t\t\t\t\t!open &&\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tclassName=\"open-sidebar\"\n\t\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\t\tonClick={() => useOpen(true)}\n\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t}\n\t\t\t\t\t<Grid className=\"header-menu-con\">\n\t\t\t\t\t\t<Grid className=\"name-field\"><p className=\"name\">{userName}</p>{userType === 'professor' ? \"교수\" : \"\"}<p>님, 환영합니다.</p></Grid>\n\t\t\t\t\t\t<Grid className=\"menu-field\" onClick={Logout}>\n\t\t\t\t\t\t\t<ExitToAppIcon />\n\t\t\t\t\t\t\t<p>로그아웃</p>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Slide>\n\t);\n}\n\nexport default Header;","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport { ListSubheader, Grid, IconButton, List, ListItem, ListItemText } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\n\nimport { SortedAssignObj } from '../Main/Type';\nimport { useAssignmentState, useSelectedState } from '../Main/Model/AssignmentModel';\nimport { getColorState, getSortedAssign } from '../utils';\n\ntype MatchParams = {\n\tasId?: string;\n}\ntype SideBarProps = RouteComponentProps<MatchParams> & {\n\tclasses?: string\n\tuseOpen: React.Dispatch<boolean>\n\tuserType: string\n}\n\n\nconst SideBar = ({ classes, useOpen, userType, match }: SideBarProps) => {\n\tconst assignments = useAssignmentState();\n\tconst selected = useSelectedState();\n\tconst [sortedAssign, setSortedAssign] = useState<SortedAssignObj>([[], [], [], []]);\n\tconst [nowOn, setNowOn] = useState<string>(\"main\"); // main, assignment, setting, member 가 있고, 각 상태에 분기해서 현재 있는 위치 표시\n\n\tuseEffect(() => {\n\t\tassignments &&\n\t\t\tsetSortedAssign(getSortedAssign(assignments, userType));\n\t}, [assignments]);\n\n\tuseEffect(() => {\n\t\tswitch (window.location.pathname) {\n\t\tcase \"/main\":\n\t\t\t// main 페이지\n\t\t\tsetNowOn(\"main\");\n\t\t\tbreak;\n\t\tcase \"/setting\":\n\t\t\tsetNowOn(\"setting\");\n\t\t\tbreak;\n\t\tcase \"/member\":\n\t\t\tsetNowOn(\"member\");\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tsetNowOn(\"assignment\");\n\t\t}\n\t}, [window.location.href]);\n\n\treturn (\n\t\t<Grid className={clsx(classes, \"sidebar\")}>\n\t\t\t<Grid className=\"sidebar-header\">\n\t\t\t\t<Link className=\"logo-con\" to=\"/main\"><Grid className=\"NERA\"><img src=\"/img/logo_new.png\" /></Grid></Link>\n\t\t\t\t<IconButton onClick={() => useOpen(false)}><ArrowBackIcon /></IconButton>\n\t\t\t</Grid>\n\t\t\t<Grid className=\"contactTo\">\n\t\t\t\tNERA에 대한 개선사항이 있다면<br />\n\t\t\t\t<a href=\"/\">🐱이곳🐱</a>으로 알려주세요!\n\t\t\t</Grid>\n\t\t\t{\n\t\t\t\tsortedAssign &&\n\t\t\t\tsortedAssign.map((arr, index) => {\n\t\t\t\t\tconst state = getColorState(index);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<List\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tclassName=\"assignment-list\"\n\t\t\t\t\t\t\tsubheader={\n\t\t\t\t\t\t\t\t<ListSubheader component=\"div\" id=\"subheader\">\n\t\t\t\t\t\t\t\t\t{userType === 'professor' ? state.professorState : state.studentState}\n\t\t\t\t\t\t\t\t</ListSubheader>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>{\n\t\t\t\t\t\t\t\tarr.map((as) =>\n\t\t\t\t\t\t\t\t\t<Link className=\"side-assign\" key={as.assignmentId} to={`/as/${as.assignmentId}`}>\n\t\t\t\t\t\t\t\t\t\t<ListItem button>\n\t\t\t\t\t\t\t\t\t\t\t<FiberManualRecordIcon className={clsx(\"color\", state.color)} />\n\t\t\t\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\t\t\t\tprimary={as.assignmentName.length > 20 ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${as.assignmentName.substring(0, 20)}...` : as.assignmentName}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t// 현재 보고있는 page 표시\n\t\t\t\t\t\t\t\t\t\t\t\tnowOn === \"assignment\" && as.assignmentId === selected &&\n\t\t\t\t\t\t\t\t\t\t\t\t<p>✍🏼</p>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\t{\n\t\t\t\tuserType === 'professor' &&\n\t\t\t\t// 교수님 전용 메뉴\n\t\t\t\t<List\n\t\t\t\t\tsubheader={\n\t\t\t\t\t\t<ListSubheader component=\"div\" id=\"subheader\" className=\"professor-menu\">관리</ListSubheader>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<Link className=\"side-assign\" to='/setting'>\n\t\t\t\t\t\t<ListItem button>\n\t\t\t\t\t\t\t<ListItemText primary=\"과제 관리\" />\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// 현재 보고있는 page 표시\n\t\t\t\t\t\t\t\tnowOn === \"setting\" &&\n\t\t\t\t\t\t\t\t<p>✍🏼</p>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link className=\"side-assign\" to='/member'>\n\t\t\t\t\t\t<ListItem button>\n\t\t\t\t\t\t\t<ListItemText primary=\"수강생 목록 관리\" />\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// 현재 보고있는 page 표시\n\t\t\t\t\t\t\t\tnowOn === \"member\" &&\n\t\t\t\t\t\t\t\t<p>✍🏼</p>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t</Link>\n\t\t\t\t</List>\n\t\t\t}\n\t\t</Grid>\n\t);\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport RemarkMathPlugin from 'remark-math';\nimport { BlockMath, InlineMath } from \"react-katex\";\nimport * as emoji from \"emoji-dictionary\";\nimport remarkGfm from \"remark-gfm\";\nimport 'katex/dist/katex.min.css';\n\ninterface MarkdownViewerProps {\n    source: string;\n}\n\nconst MarkdownViewer: React.FC<MarkdownViewerProps> = (props: MarkdownViewerProps) => {\n\t// 각 HTML 컴포넌트를 어떻게 렌더링할 것인지를 정의.\n\t// react-markdown 라이브러리에서 매개변수에 대한 타입을 제공하지 않으므로,\n\t// 매개변수의 타입을 any로 통일하였음.\n\t\n\tfunction insertUnicode(props: any) {\n\t\treturn props.value.replace(/:[^:\\s]*(?:::[^:\\s]*)*:/gi, (name: string) => emoji.getUnicode(name));\n\t}\n\n\tfunction renderBreak() {\n\t\treturn <br></br>;\n\t}\n\n\tfunction renderParagraph(props: any) {\n\t\treturn <p className=\"markdown_paragraph\">{props.children}</p>;\n\t}\n\n\tfunction renderEmphasis(props: any) {\n\t\treturn <em className=\"markdown_emphasis\">{props.children}</em>;\n\t}\n\n\tfunction renderLink(props: any) {\n\t\tif (props.href) {\n\t\t\treturn <a className=\"markdown_link\" href={props.href}>{props.children}</a>;\n\t\t} else {\n\t\t\treturn <strong className=\"markdown_strong\">(주소가 없는 링크는 만들 수 없습니다.)</strong>;\n\t\t}\n\t}\n\n\tfunction renderStrong(props: any) {\n\t\treturn <strong className=\"markdown_strong\">{props.children}</strong>;\n\t}\n\n\tfunction renderDelete(props: any) {\n\t\treturn <del>{props.children}</del>;\n\t}\n\n\tfunction renderList(props: any) {\n\t\tif (props.start) {\n\t\t\treturn <ol className=\"markdown_ol\">{props.children}</ol>;\n\t\t} else {\n\t\t\treturn <ul className=\"markdown_ul\">{props.children}</ul>;\n\t\t}\n\t}\n\n\tfunction renderListItem(props: any) {\n\t\treturn <li className=\"markdown_list_item\">{props.children}</li>;\n\t}\n\n\tfunction renderBlockQuote(props: any) {\n\t\treturn <blockquote className=\"markdown_blockquote\">{props.children}</blockquote>;\n\t}\n\n\tfunction renderCode(props: any) {\n\t\treturn (\n\t\t\t<pre className=\"markdown_pre\">\n\t\t\t\t<code>\n\t\t\t\t\t{props.value}\n\t\t\t\t</code>\n\t\t\t</pre>\n\t\t)\n\t}\n\n\tfunction renderTable(props: any) {\n\t\treturn <table className=\"markdown_table\">{props.children}</table>;\n\t}\n\n\tfunction renderTableCell(props: any) {\n\t\tconst style: any = {\n\t\t\ttextAlign: props.align ? props.align : 'center',\n\t\t\tpadding: \"6px 13px\"\n\t\t};\n\n\t\tstyle.border = '1px solid #dfe2e5';\n\t\tif (props.isHeader) {\n\t\t\tstyle.background = '#f2f2f2';\n\t\t}\n\n\t\treturn <td style={style}>{props.children}</td>;\n\t}\n\n\tfunction renderInlineCode(props: any) {\n\t\treturn <code className=\"markdown_inline_code\">{props.value}</code>;\n\t}\n\n\tfunction renderMath(props: any) {\n\t\treturn <BlockMath>{props.value}</BlockMath>;\n\t}\n\n\tfunction renderInlineMath(props: any) {\n\t\treturn <InlineMath>{props.value}</InlineMath>;\n\t}\n\n\tfunction renderHTML() {\n\t\t// 외부 콘텐츠를 사용하지 못하게 함.\n\t\treturn <strong className=\"markdown_strong\">(HTML 태그는 사용할 수 없습니다.)</strong>\n\t}\n\n\tconst newProps = {\n\t\tescapeHtml: false,\n\t\tplugins: [\n\t\t\tRemarkMathPlugin,\n\t\t\tremarkGfm // Table 지원\n\t\t],\n\n\t\trenderers: {\n\t\t\t/* 각 element에 대한 렌더링 방식을 정의할 것. */\n\t\t\t/* 아래에서 정의하지 않은 element는 ReactMarkdown의 기본 방식을 따름. */\n\t\t\ttext: insertUnicode,\n\t\t\tbreak: renderBreak,\n\t\t\tparagraph: renderParagraph,\n\t\t\temphasis: renderEmphasis,\n\t\t\tlink: renderLink,\n\t\t\tlinkReference: renderLink,\n\t\t\tstrong: renderStrong,\n\t\t\tdelete: renderDelete,\n\t\t\tlist: renderList,\n\t\t\tlistItem: renderListItem,\n\t\t\tblockquote: renderBlockQuote,\n\t\t\tcode: renderCode,\n\t\t\ttable: renderTable,\n\t\t\ttableCell: renderTableCell,\n\t\t\tinlineCode: renderInlineCode,\n\t\t\tmath: renderMath,\n\t\t\tinlineMath: renderInlineMath,\n\t\t\thtml: renderHTML\n\t\t}\n\t};\n\n\treturn (\n\t\t<ReactMarkdown className=\"markdown_viewer\" {...props} {...newProps} />\n\t);\n};\n\nexport default MarkdownViewer;","import React, { useEffect, useState, useRef } from 'react';\nimport { Paper, Grid, Typography, Divider } from '@material-ui/core';\nimport MarkdownViewer from './MarkdownViewer';\nimport AceEditor from 'react-ace';\nimport AceBuild from \"ace-builds\";\n\nimport \"ace-builds/src-noconflict/mode-markdown\";\nimport \"ace-builds/src-noconflict/mode-latex\";\nimport \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\n\nclass MarkDownWithLaTeXRules\n\textends window.ace.require(\"ace/mode/markdown_highlight_rules\").MarkdownHighlightRules {\n\tconstructor() {\n\t\tsuper();\n\t\tconst LatexHighlightRules = window.ace.require(\"ace/mode/latex_highlight_rules\").LatexHighlightRules;\n\t\tconst latexRules = (new LatexHighlightRules()).getRules();\n\n\t\tthis.$rules.start.push({\n\t\t\ttoken: \"keyword\",\n\t\t\tregex: \"\\\\$\\\\$\",\n\t\t\tnext: \"latex-start\"\n\t\t});\n\t\tthis.$rules.start.push({\n\t\t\ttoken: \"keyword\",\n\t\t\tregex: \"\\\\$\",\n\t\t\tnext: \"latex-start\"\n\t\t});\n        \n\t\tthis.embedRules(latexRules, \"latex-\", [\n\t\t\t{\n\t\t\t\ttoken: \"keyword\",\n\t\t\t\tregex: \"\\\\$\\\\$\",\n\t\t\t\tnext: \"start\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttoken: \"keyword\",\n\t\t\t\tregex: \"\\\\$\",\n\t\t\t\tnext: \"start\"\n\t\t\t}\n\t\t]);\n\n\t}\n}\n\nclass CustomMarkdownMode\n\textends window.ace.require(\"ace/mode/markdown\").Mode {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.HighlightRules = MarkDownWithLaTeXRules;\n\t}\n}\n\ninterface MarkdownEditorProps {\n    contents: string;\n    onChange: React.Dispatch<string>;\n}\n\nconst MarkdownEditor: React.FC<MarkdownEditorProps> = ({ contents, onChange }) => {\n\tconst [source, setSource] = useState<string>(\"\");\n\tconst [timer, setTimer] = useState<NodeJS.Timeout | undefined>(undefined);\n\tconst editorDivRef = useRef<HTMLDivElement>(null);\n\tconst editorRef = useRef<AceEditor>(null);\n\tconst viewerRef = useRef<HTMLDivElement>(null);\n\n\tfunction updateSource() {\n\t\tif (editorRef.current) {\n\t\t\tconst session = editorRef.current.editor.getSession();\n\t\t\tsetSource(session.getValue());\n\t\t} else if (timer !== undefined) {\n\t\t\tclearInterval(timer);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tconst customMarkDown = new CustomMarkdownMode();\n\n\t\tif (editorRef !== undefined && viewerRef !== undefined) {\n\t\t\tconst session = editorRef?.current?.editor?.getSession();\n\n\t\t\tif (session !== undefined) {\n\t\t\t\tsession.setMode(customMarkDown as AceBuild.Ace.SyntaxMode);\n\t\t\t\tif (viewerRef.current && editorDivRef.current)\n\t\t\t\t\tviewerRef.current.style.height = `${editorDivRef.current.offsetHeight}px`;\n\t\t\t\tsetTimer(setInterval(updateSource, 250));\n\t\t\t}\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsetSource(contents === undefined ? \"\" : contents);\n\n\t\tif (editorRef !== undefined && viewerRef !== undefined) {\n\t\t\tconst session = editorRef?.current?.editor?.getSession();\n\n\t\t\tif (session !== undefined) {\n\t\t\t\tsession.setValue(contents === undefined ? \"\" : contents);\n\t\t\t}\n\t\t}\n\t}, [contents]);\n\n\tfunction handleTextChange(value: string): void {\n\t\tif (onChange)\n\t\t\tonChange(value);\n\t}\n\n\treturn (\n\t\t<Paper component=\"form\" className=\"editor_root\">\n\t\t\t<Grid container direction=\"row\" justify=\"center\">\n\t\t\t\t<div className=\"editor_input_container\">\n\t\t\t\t\t<Typography variant=\"caption\">Markdown 및 LaTeX 형식</Typography>\n\t\t\t\t\t<Divider className=\"editor_caption_divider\" orientation=\"horizontal\"></Divider>\n\t\t\t\t\t<div className=\"editor_input\" ref={editorDivRef}>\n\t\t\t\t\t\t<AceEditor\n\t\t\t\t\t\t\tref={editorRef}\n\t\t\t\t\t\t\tclassName=\"editor_input\"\n\t\t\t\t\t\t\tmode=\"markdown\"\n\t\t\t\t\t\t\ttheme=\"textmate\"\n\t\t\t\t\t\t\tfontSize={18}\n\t\t\t\t\t\t\tshowPrintMargin={false}\n\t\t\t\t\t\t\tminLines={35}\n\t\t\t\t\t\t\tmaxLines={35}\n\t\t\t\t\t\t\tshowGutter={true}\n\t\t\t\t\t\t\thighlightActiveLine={true}\n\t\t\t\t\t\t\twrapEnabled={true}\n\t\t\t\t\t\t\tonChange={handleTextChange}\n\t\t\t\t\t\t></AceEditor>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Divider className=\"editor_divider\" orientation=\"vertical\" flexItem></Divider>\n\t\t\t\t<div className=\"editor_viewer_container\">\n\t\t\t\t\t<Typography variant=\"caption\">미리 보기</Typography>\n\t\t\t\t\t<Divider className=\"editor_caption_divider\" orientation=\"horizontal\"></Divider>\n\t\t\t\t\t<div ref={viewerRef} className=\"editor_viewer\">\n\t\t\t\t\t\t<MarkdownViewer source={source}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Grid>\n\t\t</Paper>\n\t);\n};\n\nexport default MarkdownEditor;","// Constants Definition\n\nexport const TABLE__SCORE = [ // for score table \n\t{\n\t\tid: \"userNumber\",\n\t\tlabel: \"학번\",\n\t\tallowSorting: true\n\t},\n\t{\n\t\tid: \"submittedCount\",\n\t\tlabel: \"제출한 문제 수\",\n\t\tallowSorting: true\n\t},\n\t{\n\t\tid: \"markedCount\",\n\t\tlabel: \"채점한 문제 수\",\n\t\tallowSorting: true\n\t},\n\t{\n\t\tid: \"allMarked\",\n\t\tlabel: \"채점 완료 여부\",\n\t\tallowSorting: true\n\t},\n\t{\n\t\tid: \"scoreSum\",\n\t\tlabel: \"총 점수\",\n\t\tallowSorting: true\n\t}\n];\n\nexport const TABLE__QUESTION = [\n\t{ \n\t\tid: 'questionNumber',\n\t\tdisablePadding: true, \n\t\tlabel: '문제 번호' \n\t},\n\t{ \n\t\tid: 'questionId',\n\t\tdisablePadding: false, \n\t\tlabel: '문제 ID' \n\t}\n];\n\nexport const TABLE__STUDENTS = [\n\t{ \n\t\tid: 'userNumber',\n\t\tdisablePadding: true, \n\t\tlabel: '학번' \n\t},\n\t{ \n\t\tid: 'submitted',\n\t\tdisablePadding: false, \n\t\tlabel: '답안을 하나 이상 제출함' \n\t},\n\t{ \n\t\tid: 'marked',\n\t\tdisablePadding: false, \n\t\tlabel: '채점을 완료함' \n\t}\n];","import React from 'react';\nimport { TableCell, TableHead, TableRow, TableSortLabel } from '@material-ui/core';\n\ntype Props = {\n\theadCells: any;\n\tonRequestSort: any;\n\torder: any;\n\torderBy: any;\n}\n\nconst SortedTableHead: React.FunctionComponent<Props> = ({headCells, onRequestSort, order, orderBy}) => {\n\tconst getSortHandler = (id: any) => {\n\t\treturn (e: React.MouseEvent) => onRequestSort(e, id);\n\t};\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell />\n\t\t\t\t{headCells.map((headCell: {id: string; label: string; allowSorting: boolean;}) => (\n\t\t\t\t\t<TableCell key={headCell.id} sortDirection={orderBy === headCell.id ? order : false}>\n\t\t\t\t\t\t{headCell.allowSorting ?\n\t\t\t\t\t\t\t<TableSortLabel\n\t\t\t\t\t\t\t\tactive={orderBy === headCell.id}\n\t\t\t\t\t\t\t\tdirection={orderBy === headCell.id ? order : \"asc\"}\n\t\t\t\t\t\t\t\tonClick={getSortHandler(headCell.id)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{headCell.label}\n\t\t\t\t\t\t\t\t{orderBy === headCell.id &&\n\t\t\t\t\t\t\t\t<span>{order === \"desc\" ? \"(내림차순)\" : \"(오름차순)\"}</span>\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t</TableSortLabel> :\n\t\t\t\t\t\t\theadCell.label\n\t\t\t\t\t\t}\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t)\n}\n\nexport default SortedTableHead;","import React, { useState } from 'react';\n\nimport { Box, Collapse, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, TablePagination, Paper, TableSortLabel } from '@material-ui/core';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { green, red } from '@material-ui/core/colors';\n\ntype Props = {\n\trow: any;\n}\n\nconst ScoreStatsRow: React.FunctionComponent<Props> = ({row}) => {\n\tconst [open, setOpen] = useState<boolean>(false);\n\treturn (\n\t\t<>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell>\n\t\t\t\t\t<IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n\t\t\t\t\t\t{open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n\t\t\t\t\t</IconButton>\n\t\t\t\t</TableCell>\n\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t{row.userNumber}\n\t\t\t\t</TableCell>\n\t\t\t\t<TableCell>{row.submittedCount}</TableCell>\n\t\t\t\t<TableCell>{row.markedCount}</TableCell>\n\t\t\t\t<TableCell>\n\t\t\t\t\t{row.allMarked ? \n\t\t\t\t\t\t<CheckCircleOutlineIcon style={{ color: green[500] }}/> :\n\t\t\t\t\t\t<HighlightOffIcon style={{ color: red[500] }}/>}\n\t\t\t\t</TableCell>\n\t\t\t\t<TableCell>{row.scoreSum}</TableCell>\n\t\t\t</TableRow>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n\t\t\t\t\t<Collapse in={open} timeout=\"auto\" unmountOnExit>\n\t\t\t\t\t\t<Box margin={1}>\n\t\t\t\t\t\t\t<Typography variant=\"h6\" gutterBottom component=\"div\">\n\t\t\t\t\t\t\t\t문제별 점수\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Table size=\"small\" aria-label=\"score\">\n\t\t\t\t\t\t\t\t<caption>학생이 답안을 제출하지 않은 문제는 표시되지 않습니다.</caption>\n\t\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t<TableCell>문제 번호</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>문제 ID</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>채점 여부</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>점수</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t{row.scores.map((scoreRow: any) => (\n\t\t\t\t\t\t\t\t\t\t<TableRow key={scoreRow.questionNumber}>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t{scoreRow.questionNumber}\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>{scoreRow.questionId}</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t{scoreRow.marked ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlineIcon style={{ color: green[500] }} fontSize=\"small\"/> :\n\t\t\t\t\t\t\t\t\t\t\t\t\t<HighlightOffIcon style={{ color: red[500] }} fontSize=\"small\"/>}\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell>{scoreRow.score}</TableCell>\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Collapse>\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t\t</>\n\t)\n}\n\nexport default ScoreStatsRow;","import React, { useState, useEffect } from 'react';\nimport { sortRows } from '../utils'\nimport { TABLE__SCORE } from '../utils/constants';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Collapse, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, TablePagination, Paper, TableSortLabel } from '@material-ui/core';\nimport SortedTableHead from './SortedTableHead';\nimport ScoreStatsRow from './ScoreStatsRow';\nimport { AssignmentObj } from '../Main/Type';\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: \"800px\",\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\ntype Row = {\n\tuserNumber: number;\n\tsubmittedCount: number;\n\tmarkedCount: number;\n\tscoreSum: number;\n\tallMarked: boolean;\n\tscores: {\n\t\tquestionNumber: number;\n\t\tquestionId: number;\n\t\tmarked: boolean;\n\t\tscore: number;\n\t}[];\n}\ntype Props = {\n  assign?: AssignmentObj;\n  answersDict?: any;\n}\nconst ScoreStats: React.FunctionComponent<Props> = ({assign, answersDict}) => {\n\tconst [order, setOrder] = useState<string>(\"asc\");\n\tconst [orderBy, setOrderBy] = useState<string>('userNumber');\n\tconst [page, setPage] = useState<number>(0);\n\tconst [rowsPerPage, setRowsPerPage] = useState<number>(5);\n\tconst [rows, setRows] = useState<Row[]>([]);\n\tconst handleRequestSort = (e: React.MouseEvent, id: any) => {\n\t\tconst isAsc = orderBy === id && order === \"asc\";\n\t\tsetOrder(isAsc ? \"desc\" : \"asc\");\n\t\tsetOrderBy(id);\n\t}\n\n\tconst getAverageScore = (rows: Row[]) => rows.reduce((acc, cur) => acc + cur.scoreSum,0)\n\n\tuseEffect(() => {\n\t\tif(!assign || !answersDict) return;\n\t\tconst _ = assign.students.map((userNumber) => {\n\t\t\tconst singleRow: Row = {\n\t\t\t\tuserNumber,\n\t\t\t\tsubmittedCount: 0,\n\t\t\t\tmarkedCount: 0,\n\t\t\t\tscoreSum: 0,\n\t\t\t\tallMarked: true,\n\t\t\t\tscores: [],\n\t\t\t};\n\t\t\tlet submitted = 0, marked= 0, scoreSum =0;\n\t\t\tconst answerOfQuesId: any = {};\n\t\t\tanswersDict[userNumber].answers.filter((answer: any) => answer.answerContent).forEach((answer: any) => {\n\t\t\t\tsubmitted++;\n\t\t\t\tif(answer.score !== -1) { // 채점 ㅇ\n\t\t\t\t\t++marked;\n\t\t\t\t\tscoreSum += answer.score;\n\t\t\t\t}\n\t\t\t\tanswerOfQuesId[answer.questionId] = answer;\n\t\t\t})\n\n\t\t\tsingleRow.submittedCount = submitted;\n\t\t\tsingleRow.markedCount = marked;\n\t\t\tsingleRow.scoreSum = scoreSum;\n\t\t\tsingleRow.allMarked = submitted === marked;\n\t\t\t\n\t\t\tconst scores = [];\n\t\t\tlet questionNumber = 1;\n\t\t\tfor (const ques of assign.questions) {\n\t\t\t\tif (ques.questionId in answerOfQuesId) {\n\t\t\t\t\tscores.push({\n\t\t\t\t\t\tquestionNumber: questionNumber,\n\t\t\t\t\t\tquestionId: ques.questionId,\n\t\t\t\t\t\tmarked: answerOfQuesId[ques.questionId].score >= 0,\n\t\t\t\t\t\tscore: (answerOfQuesId[ques.questionId].score < 0 ? 0 : answerOfQuesId[ques.questionId].score)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tquestionNumber++;\n\t\t\t}\n\t\t\tsingleRow.scores = scores;\n\t\t\treturn singleRow;\n\t\t});\n\t\tsetRows(_);\n\t}, [assign, answersDict]);\n\n\t\n\treturn (\n\t\t<Paper className=\"score_stats\" elevation={3}>\n\t\t\t<TableContainer component={Paper}>\n\t\t\t\t<Table className=\"score_stats_table\" aria-label=\"score stats table\" size=\"small\">\n\t\t\t\t\t<caption>{`평균 점수는 ${getAverageScore(rows)}점 입니다.`}</caption>\n\t\t\t\t\t<SortedTableHead \n\t\t\t\t\t\theadCells={TABLE__SCORE}\n\t\t\t\t\t\tonRequestSort={handleRequestSort}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderBy={orderBy}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{sortRows(rows, order, orderBy)\n\t\t\t\t\t\t\t.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n\t\t\t\t\t\t\t.map((row: any) => (\n\t\t\t\t\t\t\t\t<ScoreStatsRow key={row.userNumber} row={row} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t{\n\t\t\t\t<TablePagination\n\t\t\t\t\trowsPerPageOptions={[5, 10, 25, 50, 100]}\n\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\tcount={rows.length}\n\t\t\t\t\trowsPerPage={rowsPerPage}\n\t\t\t\t\tpage={page}\n\t\t\t\t\tonChangePage={(e, newValue) => {setPage(newValue)}}\n\t\t\t\t\tonChangeRowsPerPage={(e) => {\n\t\t\t\t\t\tsetRowsPerPage(parseInt(e.target.value, 10));\n\t\t\t\t\t\tsetPage(0);\n\t\t\t\t\t}}\n\t\t\t\t/>}\n\t\t</Paper>\n\t)\n}\n\n\n\n\nexport default ScoreStats;","/* eslint-disable no-mixed-spaces-and-tabs */\nimport React, { useEffect } from 'react';\nimport { Table, TableHead, TableBody, TableCell, TableContainer, TablePagination, TableRow, TableSortLabel, Toolbar, Typography, Paper, Checkbox}  from '@material-ui/core';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tpaddingLeft: theme.spacing(2),\n\t\tpaddingRight: theme.spacing(1),\n\t},\n\thighlight:\n        theme.palette.type === 'light' ? \n        \t{\n        \t\tcolor: theme.palette.secondary.main, backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        \t}\n        \t: {\n        \t\tcolor: theme.palette.text.primary,\n        \t\tbackgroundColor: theme.palette.secondary.dark,\n        \t},\n\ttitle: {\n\t\tflex: '1 1 100%',\n\t},\n}));\n\ntype Props = {\n  numSelected: number;\n  type: \"question\" | \"student\";\n}\n\nconst EnhancedTableToolbar: React.FunctionComponent<Props> = ({numSelected, type}) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Toolbar\n\t\t\tclassName={clsx(classes.root, {\n\t\t\t\t[classes.highlight]: numSelected > 0,\n\t\t\t})}\n\t\t>\n\t\t\t{numSelected > 0 ? (\n\t\t\t\t<Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n\t\t\t\t\t{numSelected}{type === \"question\" ? \"개\" : \"명\"}의 {type === \"question\" ? \"문제를\" : \"학생을\"} 선택함\n\t\t\t\t</Typography>\n\t\t\t) : (\n\t\t\t\t<Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n\t\t\t\t\t채점할 {type === \"question\" ? \"문제\" : \"학생\"} 선택\n\t\t\t\t</Typography>\n\t\t\t)}\n\t\t</Toolbar>\n\t)\n}\n\nexport default EnhancedTableToolbar;","import React from 'react';\n\nimport { TableHead, TableCell,  TableRow, TableSortLabel, Checkbox}  from '@material-ui/core';\n\ntype Props = {\n\tclasses: any;\n\tnumSelected: number;\n\tonRequestSort: any;\n\tonSelectAllClick: (e: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void;\n\torder: 'asc' | 'desc';\n\torderBy: string;\n\trowCount: number;\n\theadCells: any[];\n}\n\nconst EnhancedTableHead: React.FunctionComponent<Props> = ({ classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells }) => {\n\tconst createSortHandler = (property: string) => (event: React.MouseEvent) => {\n\t\tonRequestSort(event, property);\n\t};\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell padding=\"checkbox\" >\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tindeterminate={numSelected > 0 && numSelected < rowCount}\n\t\t\t\t\t\tchecked={rowCount > 0 && numSelected === rowCount}\n\t\t\t\t\t\tonChange={onSelectAllClick}\n\t\t\t\t\t\tinputProps={{ 'aria-label': 'select all questions' }}\n\t\t\t\t\t/>\n\t\t\t\t</TableCell>\n\t\t\t\t{headCells.map((headCell, idx) => (\n\t\t\t\t\t<TableCell\n\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\tpadding={headCell.disablePadding ? 'none' : 'default'}\n\t\t\t\t\t\tsortDirection={orderBy === headCell.id ? order : false}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableSortLabel\n\t\t\t\t\t\t\tactive={orderBy === headCell.id}\n\t\t\t\t\t\t\tdirection={orderBy === headCell.id ? order : 'asc'}\n\t\t\t\t\t\t\tonClick={createSortHandler(headCell.id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{headCell.label}\n\t\t\t\t\t\t\t{orderBy === headCell.id && <span className={classes.visuallyHidden}>{order === 'desc' ? '내림 차순 정렬됨' : '오름 차순 정렬됨'}</span>}\n\t\t\t\t\t\t</TableSortLabel>\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t)\n}\n\nexport default EnhancedTableHead;","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { Table, TableHead, TableBody, TableCell, TableContainer, TablePagination, TableRow, TableSortLabel, Toolbar, Typography, Paper, Checkbox}  from '@material-ui/core';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport EnhancedTableToolbar from './EnhancedTableToolbar';\nimport EnhancedTableHead from './EnhancedTableHead';\nimport { compareElements } from '../utils/sortRows';\nimport { AssignmentObj } from '../Main/Type';\nimport { TABLE__QUESTION } from '../utils/constants';\nfunction getComparator(order: 'asc'|'desc', orderBy: string) {\n\treturn order === 'desc'\n\t\t? (a: any, b: any) => compareElements(a, b, orderBy)\n\t\t: (a: any, b: any) => -compareElements(a, b, orderBy);\n}\n\nfunction stableSort(array: any[], comparator: any) {\n\tconst stabilizedThis = array.map((el, index) => [el, index]);\n\tstabilizedThis.sort((a, b) => {\n\t\tconst order = comparator(a[0], b[0]);\n\t\tif (order !== 0) return order;\n\t\treturn a[1] - b[1];\n\t});\n\treturn stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: \"500px\",\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\ntype Row = {\n\tquestionNumber: number;\n\tquestionId: number;\n}\ntype Props = {\n\tonChange: any;\n\tassign: AssignmentObj;\n}\n\nconst QuestionSelector: React.FunctionComponent<Props> = ({onChange, assign}) => {\n\tconst classes = useStyles();\n\tconst [selected, setSelected] = useState<any[]>([]);\n\tconst [rows, setRows] = useState<Row[]>([]);\n\tconst [emptyRows, setEmptyRows] = useState<number>(0);\n\tconst [order, setOrder] = useState<'asc'|'desc'>('asc');\n\tconst [orderBy, setOrderBy] = useState<string>('questionNumber');\n\tconst [page, setPage] = useState<number>(0);\n\tconst [rowsPerPage, setRowsPerPage] = useState<number>(10);\n\n\tconst handleRequestSort = (e: React.MouseEvent, property: string) => {\n\t\tconst isAsc = orderBy === property && order === 'asc';\n\t\tsetOrder(isAsc ? 'desc' : 'asc');\n\t\tsetOrderBy(property);\n\t};\n\n\tconst handleSelectAllClick = (e: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\n\t\tif(e.target.checked) {\n\t\t\tconst newSelecteds = rows.map((n: any) => n.questionId);\n\t\t\tsetSelected(newSelecteds);\n\t\t\tonChange && onChange(newSelecteds);\n\t\t}\n\t\telse {\n\t\t\tsetSelected([]);\n\t\t\tonChange && onChange([]);\n\t\t}\n\n\t};\n\n\tconst isSelected = (questionId: number) => selected.indexOf(questionId) !== -1;\n\tconst handleClick = (e: React.MouseEvent, questionId: number) => {\n\t\tconst selectedIndex = selected.indexOf(questionId);\n\t\tlet newSelected: any[] = [];\n\n\t\tif (selectedIndex === -1) {\n\t\t\tnewSelected = newSelected.concat(selected, questionId);\n\t\t} else if (selectedIndex === 0) {\n\t\t\tnewSelected = newSelected.concat(selected.slice(1));\n\t\t} else if (selectedIndex === selected.length - 1) {\n\t\t\tnewSelected = newSelected.concat(selected.slice(0, -1));\n\t\t} else if (selectedIndex > 0) {\n\t\t\tnewSelected = newSelected.concat(\n\t\t\t\tselected.slice(0, selectedIndex),\n\t\t\t\tselected.slice(selectedIndex + 1),\n\t\t\t);\n\t\t}\n\n\t\tsetSelected(newSelected);\n\t\tonChange && onChange(newSelected);\t\n\t}\n\n\tuseEffect(() => {\n\t\tsetEmptyRows(rowsPerPage - Math.min(rowsPerPage, assign.questions.length - page * rowsPerPage));\n\n\t}, [page]);\n\n\tuseEffect(() => {\n\t\tconst _: Row[] = assign.questions.map((q, idx) => {\n\t\t\treturn {\n\t\t\t\tquestionNumber: idx+1,\n\t\t\t\tquestionId: q.questionId,\n\t\t\t}\n\t\t});\n\n\t\tsetRows(_);\n\t}, []);\n\n\treturn (\n\t\t<Paper className={classes.paper} elevation={3}>\n\t\t\t<EnhancedTableToolbar numSelected={selected.length} type=\"question\"/>\n\t\t\t<TableContainer className=\"question_selector\">\n\t\t\t\t<Table\n\t\t\t\t\taria-labelledby=\"tableTitle\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\taria-label=\"question table\"\n\t\t\t\t>\n\t\t\t\t\t<EnhancedTableHead\n\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderBy={orderBy}\n\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\n\t\t\t\t\t\tonRequestSort={handleRequestSort}\n\t\t\t\t\t\trowCount={rows.length}\n\t\t\t\t\t\theadCells={TABLE__QUESTION}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{stableSort(rows, getComparator(order, orderBy))\n\t\t\t\t\t\t\t.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n\t\t\t\t\t\t\t.map((row: any, index: any) => {\n\t\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.questionId);\n\t\t\t\t\t\t\t\tconst labelId = `question-table-checkbox-${index}`;\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\tonClick={(event) => handleClick(event, row.questionId)}\n\t\t\t\t\t\t\t\t\t\trole=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\tkey={row.questionId}\n\t\t\t\t\t\t\t\t\t\tselected={isItemSelected}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableCell padding=\"checkbox\">\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-labelledby': labelId }}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n\t\t\t\t\t\t\t\t\t\t\t{row.questionNumber}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{row.questionId}</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t{emptyRows > 0 && (\n\t\t\t\t\t\t\t<TableRow style={{ height: 33 * emptyRows }}>\n\t\t\t\t\t\t\t\t<TableCell colSpan={6} />\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<TablePagination\n\t\t\t\trowsPerPageOptions={[5, 10, 25, 50, 100]}\n\t\t\t\tcomponent=\"div\"\n\t\t\t\tcount={rows.length}\n\t\t\t\trowsPerPage={rowsPerPage}\n\t\t\t\tpage={page}\n\t\t\t\tonChangePage={(e, newpage) => {setPage(newpage);}}\n\t\t\t\tonChangeRowsPerPage={(e) => {\n\t\t\t\t\tsetRowsPerPage(parseInt(e.target.value, 10));\n\t\t\t\t\tsetPage(0);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Paper>\n\t);\n\n}\n\nexport default QuestionSelector;","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { Table, TableHead, TableBody, TableCell, TableContainer, TablePagination, TableRow, TableSortLabel, Toolbar, Typography, Paper, Checkbox}  from '@material-ui/core';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport { green, red } from '@material-ui/core/colors';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\nimport EnhancedTableToolbar from './EnhancedTableToolbar';\nimport EnhancedTableHead from './EnhancedTableHead';\nimport { compareElements } from '../utils/sortRows';\nimport { AssignmentObj } from '../Main/Type';\nimport { TABLE__STUDENTS } from '../utils/constants';\n\nfunction getComparator(order: 'asc'|'desc', orderBy: string) {\n\treturn order === 'desc'\n\t\t? (a: any, b: any) => compareElements(a, b, orderBy)\n\t\t: (a: any, b: any) => -compareElements(a, b, orderBy);\n}\n\nfunction stableSort(array: any[], comparator: any) {\n\tconst stabilizedThis = array.map((el, index) => [el, index]);\n\tstabilizedThis.sort((a, b) => {\n\t\tconst order = comparator(a[0], b[0]);\n\t\tif (order !== 0) return order;\n\t\treturn a[1] - b[1];\n\t});\n\treturn stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: \"500px\",\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\n\n\nconst getIcon = (value: any) => {\n\tif (value === undefined)\n\t\treturn \"-\";\n\telse if (value)\n\t\treturn <CheckCircleOutlineIcon style={{ color: green[500] }} fontSize=\"small\"/>;\n\n\treturn <HighlightOffIcon style={{ color: red[500] }} fontSize=\"small\"/>;\n}\n\ntype Row = {\n\tuserNumber: number;\n\tsubmitted?: boolean;\n\tmarked?: boolean;\n}\n\n\ntype Props = {\n\tonChange: any;\n\tanswersDict: any;\n\tselectedQues: any[];\n\tassign: AssignmentObj;\n}\n\nconst StudentSelector: React.FunctionComponent<Props> = ({onChange, assign, selectedQues, answersDict}) => {\n\tconst classes = useStyles();\n\tconst [selected, setSelected] = useState<number[]>([]); // state for all selected students\n\tconst [rows, setRows] = useState<Row[]>([]);\n\tconst [emptyRows, setEmptyRows] = useState<number>(0);\n\tconst [order, setOrder] = useState<'asc'|'desc'>('asc');\n\tconst [orderBy, setOrderBy] = useState<string>('questionNumber');\n\tconst [page, setPage] = useState<number>(0);\n\tconst [rowsPerPage, setRowsPerPage] = useState<number>(10);\n\n\tconst handleRequestSort = (e: React.MouseEvent, property: string) => {\n\t\tconst isAsc = orderBy === property && order === 'asc';\n\t\tsetOrder(isAsc ? 'desc' : 'asc');\n\t\tsetOrderBy(property);\n\t};\n\n\tconst handleSelectAllClick = (e: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\n\t\tif(e.target.checked) {\n\t\t\tconst newSelecteds = rows.map((n) => n.userNumber);\n\t\t\tsetSelected(newSelecteds);\n\t\t\tonChange && onChange(newSelecteds);\n\t\t}\n\t\telse {\n\t\t\tsetSelected([]);\n\t\t\tonChange && onChange([]);\n\t\t}\n\n\t};\n\n\tconst isSelected = (userNumber: number) => selected.indexOf(userNumber) !== -1;\n\tconst handleClick = (e: React.MouseEvent, userNumber: number) => {\n\t\tconst selectedIndex = selected.indexOf(userNumber);\n\t\tlet newSelected: any[] = [];\n\n\t\tif (selectedIndex === -1) {\n\t\t\tnewSelected = newSelected.concat(selected, userNumber);\n\t\t} else if (selectedIndex === 0) {\n\t\t\tnewSelected = newSelected.concat(selected.slice(1));\n\t\t} else if (selectedIndex === selected.length - 1) {\n\t\t\tnewSelected = newSelected.concat(selected.slice(0, -1));\n\t\t} else if (selectedIndex > 0) {\n\t\t\tnewSelected = newSelected.concat(\n\t\t\t\tselected.slice(0, selectedIndex),\n\t\t\t\tselected.slice(selectedIndex + 1),\n\t\t\t);\n\t\t}\n\n\t\tsetSelected(newSelected);\n\t\tonChange && onChange(newSelected);\t\n\t}\n\n\tuseEffect(() => {\n\t\tsetEmptyRows(rowsPerPage - Math.min(rowsPerPage, assign.students.length - page * rowsPerPage));\n\t}, [page]);\n\n\tuseEffect(() => {\n\t\tconst _: Row[] = assign.students.map((userNumber) => {\n\t\t\tif(!selectedQues || selectedQues.length ===0) {\n\t\t\t\treturn {\n\t\t\t\t\tuserNumber,\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst answers = answersDict[userNumber].answers;\n\t\t\t\tlet submittedCount = 0;\n\t\t\t\tlet markedCount = 0;\n\t\t\t\tfor (const questionId of selectedQues) {\n\t\t\t\t\tconst ansOfQues = answers.find((ans: any) => ans.questionId === questionId);\n\t\t\t\t\tif (ansOfQues.answerContent) {\n\t\t\t\t\t\t++submittedCount;\n\t\t\t\t\t\tmarkedCount += (ansOfQues.score === -1 ? 0 : 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tuserNumber,\n\t\t\t\t\tsubmitted: submittedCount >0,\n\t\t\t\t\tmarked: submittedCount > 0 ? submittedCount === markedCount : false,\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tsetRows(_);\n\t\treturn () => setRows([]);\n\t}, [assign, answersDict, selectedQues]);\n\n\treturn (\n\t\t<Paper className={classes.paper} elevation={3}>\n\t\t\t<EnhancedTableToolbar numSelected={selected.length} type=\"student\"/>\n\t\t\t<TableContainer>\n\t\t\t\t<Table\n\t\t\t\t\tclassName={classes.table}\n\t\t\t\t\taria-labelledby=\"tableTitle\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\taria-label=\"students table\"\n\t\t\t\t>\n\t\t\t\t\t<EnhancedTableHead\n\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderBy={orderBy}\n\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\n\t\t\t\t\t\tonRequestSort={handleRequestSort}\n\t\t\t\t\t\trowCount={rows.length}\n\t\t\t\t\t\theadCells={TABLE__STUDENTS}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{stableSort(rows, getComparator(order, orderBy))\n\t\t\t\t\t\t\t.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n\t\t\t\t\t\t\t.map((row: any, index: any) => {\n\t\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.userNumber);\n\t\t\t\t\t\t\t\tconst labelId = `student-table-checkbox-${index}`;\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\tonClick={(event) => handleClick(event, row.userNumber)}\n\t\t\t\t\t\t\t\t\t\trole=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\tkey={row.userNumber}\n\t\t\t\t\t\t\t\t\t\tselected={isItemSelected}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableCell padding=\"checkbox\">\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-labelledby': labelId }}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n\t\t\t\t\t\t\t\t\t\t\t{row.userNumber}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{getIcon(row.submitted)}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{getIcon(row.marked)}</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t{emptyRows > 0 && (\n\t\t\t\t\t\t\t<TableRow style={{ height: 33 * emptyRows }}>\n\t\t\t\t\t\t\t\t<TableCell colSpan={6} />\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<TablePagination\n\t\t\t\trowsPerPageOptions={[5, 10, 25, 50, 100]}\n\t\t\t\tcomponent=\"div\"\n\t\t\t\tcount={rows.length}\n\t\t\t\trowsPerPage={rowsPerPage}\n\t\t\t\tpage={page}\n\t\t\t\tonChangePage={(e, newpage) => {setPage(newpage);}}\n\t\t\t\tonChangeRowsPerPage={(e) => {\n\t\t\t\t\tsetRowsPerPage(parseInt(e.target.value, 10));\n\t\t\t\t\tsetPage(0);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Paper>\n\t);\n\n}\n\nexport default StudentSelector;","import React, { useEffect, useState, KeyboardEvent } from 'react';\nimport XLSX from 'xlsx';\n\nimport { Grid, Modal, Paper, TextField, Button, Typography, Tooltip } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { GroupObj } from '../Main/Type';\nimport { useGroupState, useSaveGroup } from '../Main/Model/GroupModel';\nimport { useUserState } from '../Main/Model/UserModel';\n\nconst typeString = ['add', 'update'];\n\ntype MemberObject = {\n\ttypeProps: typeof typeString[number];\n\tgroupProps?: GroupObj;\n\thandleClose: () => void;\n}\n\nconst MemberPopup = ({ typeProps, groupProps, handleClose }: MemberObject) => {\n\tconst groups = useGroupState(); // model에서 group 정보 받아오기\n\tconst user = useUserState();\n\tconst saveGroupFunc = useSaveGroup();\n\n\tconst [update, forceUpdate] = useState<boolean>(true);\n\tconst [group, setGroup] = useState<GroupObj | undefined>(groupProps); // 그룹 이름으로 받아올 시에 저장되는 변수\n\n\tconst [name, setName] = useState<string>(\"\"); // 현재 MODAL에 있는 리스트 이름\n\tconst [members, setMembers] = useState<Array<string>>([]); // 현재 MODAL에 있는 수강생 리스트\n\tconst [openGroups, setOpenGroups] = useState<boolean>(false); // 기존 그룹 보여주기 여부\n\tconst [openImg, setOpenImg] = useState<boolean>(false); // excel 설명 이미지\n\n\tuseEffect(() => {\n\t\t// 그룹이 바뀌면 member도 다시 세팅\n\t\tconst setMembersByGroup = async () => {\n\t\t\tsetMembers([]); setName(\"\");\n\t\t\tif (group === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst tmp = members.slice(0);\n\t\t\tawait group.students.forEach((student) => {\n\t\t\t\ttmp.push(student.toString());\n\t\t\t});\n\t\t\tawait setMembers(tmp);\n\t\t\tawait setName(group.className);\n\t\t}\n\n\t\tsetMembersByGroup();\n\t}, [group]);\n\n\tconst changeMember = async (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number) => {\n\t\t// textfield가 바뀔 때마다 members 갱신\n\t\tconst tmp = members; // 얕은 복사\n\t\ttmp[index] = e.target.value;\n\t\tawait setMembers(tmp);\n\t\tforceUpdate(!update);\n\t}\n\n\tconst addMember = () => {\n\t\t// member 추가\n\t\tsetMembers([\n\t\t\t...members,\n\t\t\t\"\"\n\t\t]);\n\t}\n\n\tconst deleteMember = async (index: number) => {\n\t\t// member 삭제\n\t\tawait setMembers([]);\n\t\tconst tmp = members;\n\t\ttmp.splice(index, 1);\n\t\tawait setMembers(tmp);\n\t}\n\n\tconst changeName = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n\t\t// 이름은 길이가 max 30\n\t\tif (e.target.value.length > 30) {\n\t\t\talert(\"수강생 목록의 이름은 30자를 초과할 수 없습니다.\");\n\t\t\treturn;\n\t\t}\n\t\tsetName(e.target.value);\n\t}\n\n\tconst changeGroup = async (gr: GroupObj) => {\n\t\t// 수강생 목록 불러오기에서 목록 클릭 시\n\t\tawait setGroup(undefined);\n\t\tawait setGroup(gr);\n\t}\n\n\tconst uploadXlsxFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconsole.log(\"엑셀 파일 로드\");\n\t\tconst file = e.target.files && e.target.files[0];\n\t\tif (file === null) return;\n\n\t\t// 확장자 검사\n\t\tconst name = file.name.slice(0, file.name.indexOf(\".\")).toLowerCase();\n\t\tconst check = file.name.slice(file.name.indexOf(\".\") + 1).toLowerCase();\n\t\tif (check !== 'csv' && check !== 'xlsx') {\n\t\t\talert('.csv, .xlsx 파일만 등록 가능합니다.');\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onload = async (evt) => { // evt = on_file_select event\n\t\t\t\t/* Parse data */\n\t\t\t\tconst bstr = evt.target && evt.target.result;\n\t\t\t\tconst wb = XLSX.read(bstr, { type: 'binary' });\n\t\t\t\t/* Get first worksheet */\n\t\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t\t/* Convert array of arrays */\n\t\t\t\tconst data = XLSX.utils.sheet_to_json<any>(ws);\n\n\t\t\t\t/* Update state => 기존 멤버에 추가 */\n\t\t\t\tconst tmp: Array<string> = [];\n\t\t\t\tdata.forEach(element => {\n\t\t\t\t\ttmp.push(element['학번'].toString().trim());\n\t\t\t\t});\n\t\t\t\tawait setName(name);\n\t\t\t\tawait setMembers(tmp);\n\t\t\t};\n\t\t\treader.readAsBinaryString(file);\n\t\t} catch (e) {\n\t\t\talert(\"엑셀 파일을 로딩하는 중 오류가 발생했습니다.\");\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst isCorrect = (member: string) => {\n\t\t// 입력한 학번 검사\n\t\tif (isNaN(Number(member))) { // 숫자로 변환 가능\n\t\t\treturn false;\n\t\t}\n\t\tif (Number(member) >= 3000000000 || Number(member) <= 2000000000) { // 범위 체크\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tconst saveGroup = async () => {\n\t\t// to do : 전처리 함수 => 학번 검사 및 비어있는 칸은 없애버리기\n\t\tconsole.log(typeProps);\n\t\tawait members.forEach((member) => {\n\t\t\tif (!isCorrect(member)) {\n\t\t\t\talert(\"학번을 제대로 입력해주세요.\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tuser &&\n\t\t\tsaveGroupFunc({\n\t\t\t\tclassName: name,\n\t\t\t\tstudents: members.map((member) => parseInt(member)),\n\t\t\t\tgroupId: (typeProps === 'add' || group === undefined) ? -1 : group.groupId // 생성은 -1\n\t\t\t})\n\t\tawait handleClose();\n\t}\n\n\tconst setMemberByKeyDown = (e: KeyboardEvent<HTMLDivElement>, index: number) => {\n\t\t// keyboard 눌림에 따라 member 삭제 및 생성\n\t\tswitch (e.keyCode) {\n\t\tcase 13: // enter\n\t\t\taddMember();\n\t\t\tbreak;\n\t\tcase 46: // delete\n\t\t\tdeleteMember(index);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\topen={true}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"student-modal\"\n\t\t\taria-describedby=\"수강생 목록 모달입니다.\"\n\t\t\tclassName=\"modal\">\n\t\t\t<Paper elevation={3} className=\"modal-con group-modal-con contents-container\">\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"contents-title\">\n\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t<h6>수강생 불러오기</h6>\n\t\t\t\t\t\t\t<Button className=\"x-btn x-btn1\" variant=\"outlined\" onClick={handleClose}><CloseIcon /></Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid>\n\t\t\t\t\t\t\t<Button color=\"primary\" variant=\"contained\" onClick={() => setGroup(undefined)} className=\"init-btn\">초기화</Button>\n\t\t\t\t\t\t\t<Button color=\"primary\" variant=\"contained\" onClick={saveGroup}>저장</Button>\n\t\t\t\t\t\t\t<Button className=\"x-btn x-btn2\" variant=\"outlined\" onClick={handleClose}><CloseIcon /></Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Grid className=\"get-group-con\" container>\n\t\t\t\t\t\t<Grid container alignItems=\"center\">\n\t\t\t\t\t\t\t<Grid className=\"group-btn-con\" container alignItems=\"center\">\n\t\t\t\t\t\t\t\t<Button color=\"secondary\" variant=\"contained\" onClick={() => setOpenGroups(!openGroups)}>{openGroups ? \"기존 수강생 목록 숨기기\" : \"기존 수강생 목록 불러오기\"}</Button>\n\t\t\t\t\t\t\t\t<p>{openGroups ? \"👇 목록 이름을 클릭하면 수강생들을 불러올 수 있습니다.\" : \"👈 버튼을 클릭하면 목록을 불러올 수 있습니다.\"}</p>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// 기존에 존재하는 수강생 목록 불러오기\n\t\t\t\t\t\t\t\topenGroups &&\n\t\t\t\t\t\t\t\t<Grid className=\"group-con\" container alignItems=\"center\" wrap=\"wrap\">\n\t\t\t\t\t\t\t\t\t{groups.map((gr) => <Button variant=\"outlined\" key={gr.groupId} onClick={() => changeGroup(gr)}>{gr.className}</Button>)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid container alignItems=\"center\">\n\t\t\t\t\t\t\t<Grid className=\"group-btn-con\" container alignItems=\"center\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"file-upload\"\n\t\t\t\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\t\t\t\tid=\"contained-button-file\"\n\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\tonChange={(e) => uploadXlsxFile(e)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"contained-button-file\">\n\t\t\t\t\t\t\t\t\t<Button color=\"secondary\" variant=\"contained\" component=\"span\">\n\t\t\t\t\t\t\t\t\t\t엑셀로 수강생 목록 불러오기\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<p>엑셀은 한 열에 학번만 기재하면 됩니다.</p>\n\t\t\t\t\t\t\t\t<Button className=\"example\" variant=\"outlined\" onClick={() => setOpenImg(true)}>예시</Button>\n\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\topen={openImg}\n\t\t\t\t\t\t\t\t\tonClose={() => setOpenImg(false)}\n\t\t\t\t\t\t\t\t\tclassName=\"img-modal\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Paper className=\"contents-container img-con\" elevation={3}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"contents-title\">\n\t\t\t\t\t\t\t\t\t\t\t<h6>엑셀 사용 예시</h6>\n\t\t\t\t\t\t\t\t\t\t\t<Button className=\"x-btn x-btn1\" variant=\"outlined\" onClick={() => setOpenImg(false)}><CloseIcon /></Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<img src=\"/img/excelEX.png\" alt=\"엑셀 사용설명 이미지\" />\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"contents-title\">\n\t\t\t\t\t\t<h6>정보 입력</h6>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Grid className=\"set-group-con\" container direction=\"column\">\n\t\t\t\t\t\t<Grid container alignItems=\"center\" justify=\"space-between\" wrap=\"wrap\">\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tclassName=\"group-name-field\"\n\t\t\t\t\t\t\t\tlabel=\"수강생 목록 이름\"\n\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\tstartAdornment: (\n\t\t\t\t\t\t\t\t\t\t<p>🙌🏻</p>\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={(e) => changeName(e)}\n\t\t\t\t\t\t\t\tvalue={name && name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button color=\"secondary\" variant=\"contained\" onClick={addMember}>학생 추가</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid container alignItems=\"center\" wrap=\"wrap\" className=\"member-con\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmembers.map((member: string, index: number) =>\n\t\t\t\t\t\t\t\t\t<Grid key={index}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tlabel={\"학생\" + (index + 1)}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => changeMember(e, index)}\n\t\t\t\t\t\t\t\t\t\t\tonKeyDown={(e) => setMemberByKeyDown(e, index)}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\tclassName={\"box-container student-container\"}\n\t\t\t\t\t\t\t\t\t\t\tvalue={member}\n\t\t\t\t\t\t\t\t\t\t\terror={isCorrect(member) ? false : true}\n\t\t\t\t\t\t\t\t\t\t\thelperText=\"학번을 입력해주세요.\"\n\t\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength: 10\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button onClick={() => deleteMember(index)}><ClearIcon /></Button>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</div>\n\t\t\t</Paper>\n\t\t</Modal>\n\t);\n};\n\nexport default MemberPopup;\n","import React from 'react';\n\nimport { Snackbar, Grid, Paper, IconButton } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\n\ntype SnackBarType = {\n\tonClickFun : () => void,\n\tmodifiedDateStr : string,\n\tstatus : string\n}\n\n// 과제를 저장한 후 오른쪽 아래에 뜨는 저장 알림\nconst SaveSnackbar = ({onClickFun, modifiedDateStr, status} : SnackBarType) => {\n\tconst handleClick = () => {\n\t\tonClickFun();\n\t}\n\n\treturn (\n\t\t<Snackbar\n\t\t\tanchorOrigin={{\n\t\t\t\tvertical: 'bottom',\n\t\t\t\thorizontal: 'right',\n\t\t\t}}\n\t\t\topen={true}\n\t\t>\n\t\t\t<Paper className=\"save_paper\" elevation={4}>\n\t\t\t\t<Grid className=\"save-paper-head\">\n\t\t\t\t\t<p>{modifiedDateStr}에 저장함</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid className=\"save-paper-body\">\n\t\t\t\t\t<p>{status}</p>\n\t\t\t\t\t<IconButton className=\"save_component\" onClick={handleClick}>\n\t\t\t\t\t\t<SaveIcon fontSize=\"large\" color=\"primary\"/>\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Grid>\n\t\t\t</Paper>\n\t\t</Snackbar>\n\t);\n\n}\n\nexport default SaveSnackbar;","import React from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\n\ntype LoadingType = {\n\tstatus : string\n}\n\n// 콘텐츠가 아직 업로드되지 않았을 때 표시하는 로딩 컴포넌트\nconst Loading = ({status} : LoadingType) =>\n\t<Grid container className=\"loading_contents\" direction=\"column\" alignItems=\"center\" >\n\t\t<CircularProgress className=\"loading\" size=\"6rem\"></CircularProgress>\n\t\t<span style={{margin:20}}>{status}</span>\n\t</Grid>;\n\nexport default Loading;","import React, { useEffect, useState } from 'react';\nimport MarkdownViewer from './MarkdownViewer';\n\nimport { Grid, Typography, Paper, Divider, FormControl, MenuItem, InputLabel, Select, FormControlLabel, Box } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n\tassignmentState: number;\n\tscore: number;\n\tfullScore: number;\n\tanswerContent?: string;\n\tuserNumber: number;\n\tquestionNumber: number;\n\tquestionId: number;\n\thandleScoreChange: any;\n}\n\nconst UserAnswer: React.FunctionComponent<Props> = props => {\n\tconst [open, setOpen] = useState<boolean>(false);\n\tconst [score, setScore] = useState<string>(props.score === -1 ? '' : props.score.toString());\n\tconst [scoreItems, setScoreItems] = useState<any>(undefined);\n\tconst isFinished = () => (props.assignmentState ? (props.assignmentState !== 0 && props.assignmentState !== 1) : false);\n\n\tconst handleChange = (e: React.ChangeEvent<{value: string}>) => {\n\t\tif(!isFinished()) return;\n\t\tconst value = parseInt(e.target.value);\n\t\tif(value > props.fullScore) {\n\t\t\tsetScore(\"\");\n\t\t\talert(`최대 점수는 ${props.fullScore} 입니다.`);\n\t\t}\n\t\telse if(value < 0) {\n\t\t\tsetScore(\"\");\n\t\t\talert(`0점 미만은 입력할 수 없습니다.`);\n\t\t}\n\t\telse {\n\t\t\tsetScore(e.target.value);\n\t\t\t//props.onChange && props.onChange(props.questionId, props.userNumber, e.target.value); // 수정필요, input 이라 이벤트 계속 발생 \n\t\t}\n\t};\n\n\treturn (\n\t\t<Paper className=\"answer_content\" elevation={4}>\n\t\t\t<Grid container direction=\"column\">\n\t\t\t\t<Typography gutterBottom variant=\"subtitle1\">{`${props.userNumber}의 ${props.questionNumber}번 문제 답안`}</Typography>\n\t\t\t\t<Divider orientation=\"horizontal\"></Divider>\n\t\t\t\t<MarkdownViewer source={props.answerContent ? props.answerContent : \"*제출한 답안 없음*\"}></MarkdownViewer>\n\t\t\t\t<Divider orientation=\"horizontal\"></Divider>\n\t\t\t\t<Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className=\"score_control\">\n\t\t\t\t\t{isFinished() ?\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<Typography className=\"answer_score\">점수(최대 {props.fullScore}점)</Typography>\n\t\t\t\t\t\t\t<TextField \n\t\t\t\t\t\t\t\tclassName=\"answer_select\"\n\t\t\t\t\t\t\t\tvalue={score}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={(e) => props.handleScoreChange(e.target.value)}\n\t\t\t\t\t\t\t\tplaceholder=\"채점 안 됨\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<Typography className=\"answer_score\">과제가 아직 마감되지 않았으므로 채점할 수 없습니다.</Typography>\n\t\t\t\t\t\t</React.Fragment>}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Paper>\n\n\t)\n}\n\nexport default UserAnswer;","import React, { useEffect, useState, Dispatch } from 'react';\n\nimport { Grid, Divider, Paper, Typography } from '@material-ui/core';\n\nimport { MarkdownViewer, MarkdownEditor } from '.';\nimport { useSelectedAssignState } from '../Main/Model/AssignmentModel';\nimport { answerType, QuestionObj } from '../Main/Type';\n\ntype answerObj = {\n\tanswerContent: string;\n\tscore: number;\n}\n\ntype questionProps = {\n\tanswer : answerType;\n\tsetAnswer : Dispatch<answerType>;\n\tsetStatus : Dispatch<string>;\n\tquestion : QuestionObj;\n\tindex : number;\n}\n\nconst StudentQuestion = ({ answer, setAnswer, setStatus, question, index } : questionProps) => {\n\tconst [scoreText, setScoreText] = useState<string[]>([\"\",\"\"]); // 배점, 실제 점수\n\tconst [eachAnswer, setEachAnswer] = useState<answerObj | undefined>();\n\tconst selectedAssign = useSelectedAssignState();\n\n\tuseEffect(()=>{\n\t\t// 선택된 과제가 있고, question에 해당하는 answer가 있으면\n\t\tif(!selectedAssign || !answer[question.questionId]){\n\t\t\tsetEachAnswer(undefined);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// answer 세팅\n\t\tsetEachAnswer(answer[question.questionId]);\n\n\t\t// scoretext 세팅\n\t\tif (selectedAssign.assignmentState === 3)\n\t\t\tsetScoreText([\"\", `${answer[question.questionId].score === -1 ? 0 : answer[question.questionId].score}점/${question.fullScore}점`]);\n\t\telse\n\t\t\tsetScoreText([`${question.fullScore}점`, \"\"]);\n\t}, [answer[question.questionId], selectedAssign]);\n\n\n\tconst saveEachAnswer = async (str : string) => {\n\t\tconst tmp = answer;\n\t\tanswer[question.questionId].answerContent = str;\n\t\tawait setAnswer(tmp);\n\t\tsetStatus(\"답안 저장 필요\");\n\t}\n\n\treturn (\n\t\t<Grid className=\"problem-container\">\n\t\t\t<Grid className=\"problem-question\">\n\t\t\t\t<h4 className=\"p-title\">문제 {index+1}<p>{scoreText[0] && `(${scoreText[0]})`}</p></h4>\n\t\t\t\t<Grid className=\"viewer\">\n\t\t\t\t\t<MarkdownViewer source={question.questionContent}/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t{\n\t\t\t\t// 0 : 공개 전 / 1 : 제출 중 / 2: 채점 중 / 3 : 채점 완료\n\t\t\t\tselectedAssign && eachAnswer && \n\t\t\t\t\t<Grid className=\"problem-answer\">\n\t\t\t\t\t\t<h4 className=\"p-title\">답안<p>{scoreText[1] && `(${scoreText[1]})`}</p></h4>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tselectedAssign.assignmentState === 1?\n\t\t\t\t\t\t\t\t<MarkdownEditor onChange={saveEachAnswer} contents={eachAnswer.answerContent} />\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<Grid className=\"viewer answer\">\n\t\t\t\t\t\t\t\t\t<MarkdownViewer source={ eachAnswer.answerContent ? eachAnswer.answerContent : \"*제출한 답안 없음*\"}/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t}\n\t\t</Grid>\n\t);\n}\n\nexport default StudentQuestion;","import React, { ReactNode, useEffect, useState } from 'react';\nimport { RouteComponentProps } from \"react-router\";\n\nimport { Grid, Divider, Snackbar, Button } from '@material-ui/core';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport { PageInfo, Loading, SaveSnackbar, StudentQuestion, MarkdownViewer } from \"../Components\";\nimport { useSelectedAssignState, useSelectedDispatch } from '../Main/Model/AssignmentModel';\nimport { useAnswerState, saveAnswer } from '../Main/Model/AnswerModel';\nimport { AnswerObj, QuestionObj, answerType, QuestionAnswerObj } from '../Main/Type';\nimport { modifiedDateToString } from '../utils';\n\ninterface MatchParams {\n\tasId?: string | undefined;\n}\n\n// Assignment 페이지\nconst Assignment: React.FC<RouteComponentProps<MatchParams>> = ({ match }) => {\n\tconst setSelected = useSelectedDispatch();\n\tconst selectedAssign = useSelectedAssignState();\n\tconst answerState = useAnswerState();\n\tconst saveAnswerFunc = saveAnswer();\n\n\tconst [status, setStatus] = useState<string>(\"변경사항 없음\");\n\tconst [answer, setAnswer] = useState<answerType | undefined>(undefined);\n\n\tuseEffect(() => {\n\t\tmatch.params.asId ?\n\t\t\tsetSelected(Number(match.params.asId)) :\n\t\t\tsetSelected(undefined);\n\t}, [match.params.asId]);\n\n\tlet mutex = 0;\n\n\t// ctrl + s 버튼 구현\n\twindow.addEventListener(\"keydown\", async (event: KeyboardEvent) => {\n\t\tif (!selectedAssign || selectedAssign.assignmentState !== 1)\n\t\t\treturn;\n\t\tif(mutex)\n\t\t\treturn;\n\t\tif ((window.navigator.platform.match(\"Mac\") ? event.metaKey : event.ctrlKey) && event.keyCode === 83) {\n\t\t\tmutex = await 1;\n\t\t\tevent.preventDefault();\n\t\t\tawait saveAnswers();\n\t\t\tmutex = await 0;\n\t\t}\n\t}, false);\n\n\tuseEffect(() => {\n\t\t// answer를 이용하기 좋은 형태로 변환\n\t\ttransFormAnswer();\n\t}, [answerState]);\n\n\tconst getInfoText = (): string => {\n\t\t// 0 : 공개 전 / 1 : 제출 중 / 2: 채점 중 / 3 : 채점 완료\n\t\tif (!selectedAssign)\n\t\t\treturn \"\";\n\t\tif (selectedAssign.assignmentState === 1) {\n\t\t\treturn \"Markdown 및 LaTeX(KaTeX) 형식으로 과제를 작성하고 저장할 수 있습니다. Ctrl+S를 누르거나 우측 하단 저장 버튼을 눌러 수동 저장할 수 있습니다.\";\n\t\t} else if (selectedAssign.assignmentState === 3) {\n\t\t\treturn \"이전에 제출한 답안들의 채점 결과를 확인할 수 있습니다.\"\n\t\t} else {\n\t\t\treturn \"과제가 채점 중입니다. 확인할 수 없는 기간입니다.\"\n\t\t}\n\t}\n\n\tconst giveHelperSite = (): ReactNode => {\n\t\t// 수강생들을 도울 링크\n\t\treturn (\n\t\t\t<Grid className=\"info-btn-con\" container alignItems=\"center\" justify=\"space-between\" wrap=\"wrap\">\n\t\t\t\t<Button color=\"primary\" variant=\"contained\">\n\t\t\t\t\t<a target=\"blank\" href=\"https://www.markdownguide.org/basic-syntax/\">👉 마크다운 문법</a>\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"primary\" variant=\"contained\">\n\t\t\t\t\t<a target=\"blank\" href=\"https://katex.org/docs/supported.html\">👉 LaTex 문법</a>\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"primary\" variant=\"contained\">\n\t\t\t\t\t<a target=\"blank\" href=\"https://powergee.github.io/simple-markdown-editor/\">👉 작성 예시</a>\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t)\n\t}\n\n\tconst transFormAnswer = () => {\n\t\t// array to map (key: questionId)\n\t\tconst tmp: answerType = {};\n\t\tif(answerState[0] && selectedAssign){\n\t\t\t// 학생은 배열에 1개의 답안obj 만이 있음\n\t\t\tanswerState[0].answers.forEach((a : AnswerObj) => {\n\t\t\t\ttmp[a.questionId] = {\n\t\t\t\t\tanswerContent: a.answerContent,\n\t\t\t\t\t// 채점 전이면 score -1\n\t\t\t\t\tscore: a.score ? a.score : -1\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetAnswer(tmp);\n\t\t} else setAnswer(undefined);\n\t}\n\n\tconst saveAnswers = async () => {\n\t\tconsole.log(\"save Answers in Assignment\");\n\t\tawait setStatus(\"답안 저장 중...\");\n\t\tif(!answer){\n\t\t\tconsole.log(\"answer 없음\");\n\t\t\treturn;\n\t\t}\n\t\t// save answer\n\t\t// map to array\n\t\tconst tmp: Array<AnswerObj> = [];\n\t\tObject.keys(answer).forEach((qId) => {\n\t\t\ttmp.push({\n\t\t\t\tquestionId: Number(qId),\n\t\t\t\tanswerContent: answer[Number(qId)].answerContent\n\t\t\t});\n\t\t});\n\t\tawait saveAnswerFunc(tmp);\n\t\tawait setStatus(\"변경 사항 없음\");\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\t// answer와 선택된 과제 모두 준비되면 rendering\n\t\t\t\t!selectedAssign ?\n\t\t\t\t\t<Loading status=\"과제 정보를 가져오는 중...\" /> :\n\t\t\t\t\t<>\n\t\t\t\t\t\t<SaveSnackbar \n\t\t\t\t\t\t\tonClickFun={saveAnswers} \n\t\t\t\t\t\t\tmodifiedDateStr={modifiedDateToString(answerState[0]?.meta?.modifiedAt)}\n\t\t\t\t\t\t\tstatus={status}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Grid className=\"assignment-page-header\">\n\t\t\t\t\t\t\t<Grid className=\"assignment-page-title\">\n\t\t\t\t\t\t\t\t<PageInfo\n\t\t\t\t\t\t\t\t\ticon=\"📚\"\n\t\t\t\t\t\t\t\t\tmainTitle={selectedAssign.assignmentName}\n\t\t\t\t\t\t\t\t\tsubTitle={`${modifiedDateToString(selectedAssign.deadline)}까지`}\n\t\t\t\t\t\t\t\t\tinformation={<MarkdownViewer source={selectedAssign.assignmentInfo} />}\n\t\t\t\t\t\t\t\t\trightSide={giveHelperSite()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid className=\"page-additional-info\" >\n\t\t\t\t\t\t\t<InfoIcon color=\"primary\" />\n\t\t\t\t\t\t\t<p>{getInfoText()}</p>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<div className=\"assignment_info_container\">\n\t\t\t\t\t\t\t\t{selectedAssign.questions.map(\n\t\t\t\t\t\t\t\t\t(question: QuestionObj, index: number) =>\n\t\t\t\t\t\t\t\t\t\tanswer &&\n\t\t\t\t\t\t\t\t\t\t<StudentQuestion\n\t\t\t\t\t\t\t\t\t\t\tkey={question.questionId}\n\t\t\t\t\t\t\t\t\t\t\tanswer={answer}\n\t\t\t\t\t\t\t\t\t\t\tsetAnswer={setAnswer}\n\t\t\t\t\t\t\t\t\t\t\tsetStatus={setStatus}\n\t\t\t\t\t\t\t\t\t\t\tquestion={question}\n\t\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</>\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport default Assignment;","import axios from \"axios\";\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Divider, Typography } from '@material-ui/core';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport { PageInfo, ScoreStats, QuestionSelector, StudentSelector, MarkdownViewer, UserAnswer } from '../Components';\nimport { useAssignmentDispatch, useAssignmentState, useSelectedAssignState, useSelectedDispatch } from \"../Main/Model/AssignmentModel\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { modifiedDateToString } from '../utils';\nimport { AssignmentObj } from \"../Main/Type\";\nimport { useAnswerState, saveAnswer } from \"../Main/Model/AnswerModel\";\n\n/*\n필요한 action\n- FETCH Assignment\n- FETCH Answers\n\n*/\ntype MatchParams = {\n\tasId?: string;\n}\n\ntype Question = number;\n\ntype Student = number;\n\ntype DictElement = {\n\tuserNumber: number;\n\tanswers: any[];\n\tmeta: any;\n}\n\ntype AnswersDict = {\n\t[key: number]: DictElement;\n}\n\ntype Props = RouteComponentProps<MatchParams> & {\n\n} \n\nconst PropAssignment: React.FunctionComponent<Props> = ({match}) => {\n\tconst selectedAssign = useSelectedAssignState();\n\tconst answers = useAnswerState();\n\tconst setSelected = useSelectedDispatch();\n\tconst [answersDict, setAnswersDict] = useState<AnswersDict|null>(null);\n\tconst [selectedQues, setSelectedQues] = useState<Question[]>([]);\n\tconst [selectedStus, setSelectedStus] = useState<Student[]>([]);\n\tconst saveAnswerFun = saveAnswer();\n\n\tuseEffect(() => {\n\t\tif(match.params.asId) {\n\t\t\tsetSelected(Number(match.params.asId));\n\t\t}\n\t\telse {\n\t\t\tsetSelected(undefined);\n\t\t}\n\t}, [match.params.asId]);\n\n\tuseEffect(() => {\n\t\tif(!selectedAssign || answers.length === 0) return;\n\t\tconst dict: {[key: number]: DictElement;} = {};\n\t\tanswers.forEach(({userNumber, answers, meta}, idx) => {\n\t\t\tdict[userNumber] = {\n\t\t\t\tuserNumber,\n\t\t\t\tanswers,\n\t\t\t\tmeta,\n\t\t\t}\n\t\t})\n\t\tsetAnswersDict(dict);\n\t}, [selectedAssign, answers]);\n\t\n\tfunction getSubTitle(as: AssignmentObj) {\n\t\t// modifiedDateToString 이용하도록 수정함\n\t\tconst deadlineString = modifiedDateToString(new Date(as.deadline));\n\t\treturn deadlineString + \" 마감\";\n\t}\n\t\n\n\tconst handleScoreChange = (answer: any, userNumber: number) => {\n\t\treturn (score: number) => {\n\t\t\tif(!score) return;\n\t\t\tconsole.log(selectedAssign);\n\t\t\tsaveAnswerFun([{\n\t\t\t\t...answer,\n\t\t\t\tscore,\n\t\t\t}])\n\t\t}\n\t};\n\tconst getQueryResult = (ques: Question[], stus: Student[]) => {\n\t\tconst NotExistComponent = <Typography variant=\"h6\" className=\"query_caption\">답안을 조회할 문제 목록과 학생 목록을 선택해주세요!</Typography>;\n\t\tconst ErrorComponent = <Typography variant=\"h6\" className=\"query_caption\">문제를 조회하는 동안 오류가 발생하였습니다.</Typography>;\n\t\tif(!ques.length || !stus.length || !selectedAssign) {\n\t\t\treturn NotExistComponent;\n\t\t}\n\t\ttry {\n\t\t\tconst questions = ques.sort();\n\t\t\tconst students = stus.sort();\n\t\t\tconst questionsSet = new Set(questions);\n\t\t\tconst Result = selectedAssign.questions.map((question, idx) => {\n\t\t\t\tif(questionsSet.has(question.questionId)) { // if question selected\n\t\t\t\t\tconst _ = students.map((studentId, stuidx) => {\n\t\t\t\t\t\tconst answer = answersDict && answersDict[studentId]?.answers?.find((item: any) => item.questionId === question.questionId);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<UserAnswer \n\t\t\t\t\t\t\t\tkey={stuidx}\n\t\t\t\t\t\t\t\tassignmentState={selectedAssign.assignmentState}\n\t\t\t\t\t\t\t\tscore={answer ? answer.score : -1}\n\t\t\t\t\t\t\t\tfullScore={question.fullScore}\n\t\t\t\t\t\t\t\tanswerContent={answer && answer.answerContent}\n\t\t\t\t\t\t\t\tuserNumber={studentId}\n\t\t\t\t\t\t\t\tquestionNumber={idx+1}\n\t\t\t\t\t\t\t\tquestionId={question.questionId}\n\t\t\t\t\t\t\t\thandleScoreChange={handleScoreChange(answer, studentId)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Grid key={idx} container className=\"problem_container\" direction=\"column\">\n\t\t\t\t\t\t\t<Grid container className=\"problem_description\" direction=\"row\" alignItems=\"flex-start\" justify=\"flex-start\">\n\t\t\t\t\t\t\t\t<h6 className=\"problem_number\">{idx+1 + \".\"}</h6>\n\t\t\t\t\t\t\t\t<MarkdownViewer source={question.questionContent}></MarkdownViewer>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t{_}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn Result;\n\t\t} catch(err) {\n\t\t\treturn ErrorComponent;\n\t\t}\n\t};\n\n\tif(!selectedAssign) {\n\t\treturn <div>수정 필요</div>\n\t}\n\treturn (\n\t\t<Grid container direction=\"column\">\n\t\t\t<PageInfo \n\t\t\t\ticon=\"📚\"\n\t\t\t\tmainTitle={selectedAssign.assignmentName as string}\n\t\t\t\tsubTitle={getSubTitle(selectedAssign)}\n\t\t\t\tinformation={<p>학생들의 답안 제출 현황을 확인하고 과제가 마감되었다면 학생들의 답안들을 채점할 수 있습니다.</p>}\n\t\t\t/>\n\t\t\t<Grid container direction=\"column\" className=\"contents-container\">\n\t\t\t\t<Grid className=\"contents-title\">\n\t\t\t\t\t<h6>점수 통계</h6>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container item direction=\"row\" className=\"page_additional_info\" alignItems=\"center\">\n\t\t\t\t\t<InfoIcon color=\"primary\" />\n\t\t\t\t\t<p>{\"'채점 완료 여부'는 그 학생이 제출한 답안들을 모두 채점하였느냐를 의미합니다.\"}</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs>\n\t\t\t\t\t{<ScoreStats assign={selectedAssign} answersDict={answersDict}></ScoreStats>}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid container direction=\"column\" className=\"contents-container\">\n\t\t\t\t<Grid className=\"contents-title\">\n\t\t\t\t\t<h6>답안 확인 및 채점</h6>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container item direction=\"row\" className=\"page_additional_info\" alignItems=\"center\">\n\t\t\t\t\t<InfoIcon color=\"primary\" />\n\t\t\t\t\t<p>아래 두 표에서 확인하려는 문제의 목록과, 확인하려는 학생의 목록을 각각 선택하면 이에 해당하는 모든 답안이 쿼리되어 아래에 나열됩니다.<br/>그리고 각각에 대한 점수를 부여할 수 있으며 변경사항은 자동 저장됩니다.</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid className=\"selector-container\" container spacing={3} direction=\"row\" wrap=\"wrap\" alignItems=\"center\">\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<QuestionSelector key={selectedAssign.assignmentId} assign={selectedAssign} onChange={(selected: any) => {setSelectedQues(selected);}} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t<StudentSelector key={selectedAssign.assignmentId} assign={selectedAssign} answersDict={answersDict} selectedQues={selectedQues} onChange={(selected: any) => {setSelectedStus(selected);}} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Divider />\n\t\t\t\t{getQueryResult(selectedQues, selectedStus)}\n\t\t\t</Grid>\n\t\t</Grid>\n\n\t)\n}\n\nexport default PropAssignment;","import React from 'react';\nimport { Layout } from '../Components';\n\n// Setting 페이지\nconst Setting: React.FC = () => {\n\tconst a = 1;\n\treturn (\n\t\t<>\n\t\t\tSetting\n\t\t</>\n\t);\n}\n\nexport default Setting;\n","import React, { useState, useEffect } from 'react';\n\nimport { PageInfo } from '../Components';\n\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { Grid, Paper, Modal, TextField, Typography, Button } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport InfoIcon from '@material-ui/icons/Info';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { Layout } from '../Components';\n\ninterface Match<ParamType> {\n\tparams: ParamType;\n}\n\ninterface RouteComponentProps<P> {\n\tmatch: Match<P>;\n}\n\ninterface SetAssignmentParams {\n\tasId: string;\n}\n\ninterface QuestionType {\n\tquestionId: number,\n\tquestionContent: string,\n\tfullScore: number,\n}\n\n// SetAssignment 페이지\nconst SetAssignment: React.FC<RouteComponentProps<SetAssignmentParams>> = ({match}) => {\n\tconst [update, forceUpdate] = useState<boolean>(false); // rendering update용\n\tconst [qOpen, setQOpen] = useState<boolean>(false); // question modal 관리\n\tconst [sOpen, setSOpen] = useState<boolean>(false); // student list modal 관리\n\n\t// 강의 정보\n\tconst [lectureName, setLecture] = useState<string>();\n\t// 과제 정보\n\tconst [assignId, setAssignId] = useState<number>(-1);\n\tconst [assignName, setAssignName] = useState<string>();\n\tconst [assignInfo, setAssignInfo] = useState<string>();\n\tconst [initAssignInfo, setInitAssignInfo] = useState<string>();\n\tconst [modifiedDate, setModifiedDate] = useState<Date>(); // 저장 시간\n\tconst [publishingTime, setPublishingTime] = useState<Date>(); // 발행 시간\n\tconst [deadline, setDeadline] = useState<Date>(); // 마감 시간\n\tconst [questions, setQuestions] = useState<Array<QuestionType>>([]);\n\tconst [students, setStudents] = useState<Array<number>>([]);\n\t// modal state 관리\n\tconst [renderQuestionIndex, setRenderQuestionIndex] = useState<number>(-1); \n\tconst [renderQuestionContents, setRenderQuestionContents] = useState<string>(); \n\tconst [initRenderQuestionContents, setInitRenderQuestionContents] = useState<string>();\n\tconst [renderQuestionScore, setRenderQuestionScore] = useState<number>(); \n\n\tconst history = useHistory();\n\n\tfunction getData(): void {\n\t\t// 과제 정보 불러오기 api\n\t\tconst asId = match.params.asId; // url의 과제id에 해당하는 정보 불러오기\n\t\tif(asId!==undefined && asId!==\"add\"){ // 이미 존재하는 과제 설정을 수정하는 페이지일 때\n\t\t\taxios\n\t\t\t\t.get(`${process.env.REACT_APP_SERVER}/v1/assignment/${asId}`, { withCredentials: true })\n\t\t\t\t.then(res => {\n\t\t\t\t\tconst data = res.data;\n\t\t\t\t\tsetAssignId(data.assignmentId);\n\t\t\t\t\tsetAssignInfo(data.assignmentInfo);\n\t\t\t\t\tsetInitAssignInfo(data.assignmentInfo);\n\t\t\t\t\tlet tmp = data.assignmentName.split('[');\n\t\t\t\t\ttmp = tmp[1].split(']');\n\t\t\t\t\tsetLecture(tmp[0]);\n\t\t\t\t\tsetAssignName(tmp[1]);\n\t\t\t\t\tsetPublishingTime(data.publishingTime); \n\t\t\t\t\tsetDeadline(data.deadline);\n\t\t\t\t\tsetQuestions(data.questions);\n\t\t\t\t\tsetStudents(data.students);\n\t\t\t\t})\n\t\t\t\t.catch(err=>{\n\t\t\t\t\tif(err.response===undefined){\n\t\t\t\t\t\talert(`내부 함수 (SetAssignment.js => getData()) 문제입니다. 오류 수정 필요.`);\n\t\t\t\t\t}\n\t\t\t\t\tconst status = err.response.status;\n\t\t\t\t\tif (status === 400) {\n\t\t\t\t\t\talert(`과제 정보를 얻는데 실패하였습니다. 잘못된 요청입니다. (${status})`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (status === 401) {\n\t\t\t\t\t\talert(`토큰이 유효하지 않습니다. (${status})`);\n\t\t\t\t\t\tdocument.cookie = \"access_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n\t\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t\t}\n\t\t\t\t\telse if (status === 404) {\n\t\t\t\t\t\talert(`과제 정보를 얻는데 실패하였습니다. 과제를 찾을 수 없습니다. (${status})`);\n\t\t\t\t\t}\n\t\t\t\t\telse if (status === 500) {\n\t\t\t\t\t\talert(\"내부 서버 오류입니다. 잠시 후에 다시 시도해주세요...\");\n\t\t\t\t\t}\n\t\t\t\t\thistory.push(\"/home/setting\");\n\t\t\t\t});\n\t\t}else{ // 새로운 과제를 추가하는 페이지일 때\n\t\t\tconst date = new Date();\n\t\t\tsetPublishingTime(date);\n\t\t\tsetDeadline(date);\n\t\t}\n\t}\n\n\tuseEffect(()=>{\n\t\tgetData();\n\t}, [match.params.asId]);\n\n\t// if you click question button => questionsHandleOpen();\n\t// if you click question +(add) button => addQuestion();\n\t// if you click question x(delete) button => deleteQuestion();\n\t// if you modify quetion modal textfield => changeRenderQuestion();\n\t// if you click quetions modal save button => saveRenderQuestion();\n\n\tfunction questionHandleOpen(index: number): void {\n\t\tsetQOpen(true);\n\t\tsetRenderQuestionIndex(index);\n\t\tsetRenderQuestionContents(questions[index].questionContent);\n\t\tsetInitRenderQuestionContents(questions[index].questionContent);\n\t\tsetRenderQuestionScore(questions[index].fullScore);\n\t}\n\n\tfunction questionHandleClose(): void {\n\t\tsetQOpen(false);\n\t}\n\n\tfunction listHandleOpen(): void {\n\t\tsetSOpen(true);\n\t}\n\n\tfunction listHandleClose(): void {\n\t\tsetSOpen(false);\n\t}\n\n\tfunction changeLectureField(e: React.ChangeEvent<HTMLInputElement>): void {\n\t\t// textfield가 바뀔 때마다 lectureName 갱신\n\n\t\tsetLecture(e.target.value);\n\t\t// forceUpdate(!update);\n\t}\n\n\tfunction changeAssignNameField(e: React.ChangeEvent<HTMLInputElement>): void {\n\t\t// textfield가 바뀔 때마다 assignmentName 갱신\n\n\t\tsetAssignName(e.target.value);\n\t\t// forceUpdate(!update);\n\t}\n\n\tfunction changeAssignInfoField(value: string): void {\n\t\t// MarkdownEditor가 바뀔 때마다 Description 갱신\n\n\t\tsetAssignInfo(value);\n\t\t// forceUpdate(!update);\n\t}\n\n\tfunction addQuestion(): void {\n\t\tlet maxQuesId = 0;\n\t\tfor (const ques of questions)\n\t\t\tmaxQuesId = Math.max(maxQuesId, ques.questionId);\n\n\t\t// 새로운 문제 추가\n\t\tconst index = questions.length;\n\t\tconst newQuestion: QuestionType = {\n\t\t\tquestionId : maxQuesId+1,\n\t\t\tquestionContent : \"\",\n\t\t\tfullScore : 0,\n\t\t};\n\n\t\tconst tmp = questions;\n\t\ttmp.push(newQuestion);\n\t\tsetQuestions(tmp);\n\t\tquestionHandleOpen(index);\n\t}\n\n\tfunction changeRenderQuestion(value: string, type: number): void {\n\t\t// textfield가 바뀔 때마다 render state들 갱신\n\n\t\tif(type===0){ // 문제 설명 갱신\n\t\t\tsetRenderQuestionContents(value);\n\t\t}else{ // 배점 갱신\n\t\t\tconst converted = Number(value);\n\t\t\tsetRenderQuestionScore(converted);\n\t\t}\n\t\t// forceUpdate(!update);\n\t}\n\n\tfunction deleteQuestion(index: number): void {\n\t\t// 문제 삭제\n\t\tconst tmp = questions;\n\t\ttmp.splice(index, 1);\n\t\tsetQuestions(tmp);\n\t\tforceUpdate(!update);\n\t}\n\n\tfunction preProcessingQuestionData(): string {\n\t\tif(renderQuestionContents===undefined || renderQuestionContents === \"\")\n\t\t\treturn \"문제 내용이 없습니다.\";\n\n\t\tif(renderQuestionScore == undefined || isNaN(renderQuestionScore))\n\t\t\treturn \"배점이 숫자가 아닙니다.\";\n\n\t\tif(renderQuestionScore<0 || renderQuestionScore>100)\n\t\t\treturn \"배점이 0 ~ 100 범위를 벗어납니다.\";\n\n\t\treturn \"\";\n\t}\n\n\tfunction saveRenderQuestion(): void {\n\t\tconst errorMessage = preProcessingQuestionData();\n\t\tif(errorMessage!==\"\"){\n\t\t\talert(errorMessage);\n\t\t\treturn;\n\t\t}\n\n\t\tconst tmp = questions;\n\t\ttmp[renderQuestionIndex].questionContent = (renderQuestionContents == undefined ? \"\" : renderQuestionContents);\n\t\ttmp[renderQuestionIndex].fullScore = (renderQuestionScore == undefined ? 0 : renderQuestionScore);\n\n\t\tsetQuestions(questions);\n\t\tquestionHandleClose();\n\t}\n\n\tfunction saveStudentModalGroup(getStudents: number[]): void {\n\t\t// renderStudent => students 저장\n\t\tsetStudents(getStudents);\n\t\tlistHandleClose();\n\t}\n\n\tfunction preProcessingAssignmentData(): string {\n\t\tif (lectureName === undefined)\n\t\t\treturn \"강의명이 없습니다. 강의명을 작성해주세요.\";\n\n\t\tif (assignName === undefined)\n\t\t\treturn \"과제명이 없습니다. 과제명을 작성해주세요.\";\n\n\t\tif (publishingTime === undefined)\n\t\t\treturn \"과제 시작 시간이 유효하지 않습니다.\";\n\t\t\n\t\tif (deadline === undefined)\n\t\t\treturn \"과제 마감 시간이 유효하지 않습니다.\";\n\n\t\tif (publishingTime.getTime() - deadline.getTime() === 0)\n\t\t\treturn \"과제 시작 시각과 마감 시각이 같습니다.\";\n\n\t\tif (deadline.getTime() - Date.now() < 0)\n\t\t\treturn \"과제 마감 시각이 현재보다 이전입니다.\";\n\n\t\tif (questions.length === 0)\n\t\t\treturn \"문제가 없습니다. 문제를 생성해주세요.\";\n        \n\t\tif (students.length === 0)\n\t\t\treturn \"수강생이 없습니다. 수강생을 추가해주세요.\";\n        \n\n\t\treturn \"\";\n\t}\n\n\tfunction saveAssignmentToDB(): void {\n\t\t// 과제 수정/생성 API와의 연동\n\n\t\tconst errMessage = preProcessingAssignmentData();\n\t\tif(errMessage !== \"\") {\n\t\t\talert(errMessage);\n\t\t\treturn;\n\t\t}\n\n\t\taxios\n\t\t\t.post('${process.env.REACT_APP_SERVER}/v1/assignment', {\n\t\t\t\tassignmentId : assignId,\n\t\t\t\tstudents : students,\n\t\t\t\tassignmentName: \"[\"+lectureName+\"]\"+assignName,\n\t\t\t\tassignmentInfo: assignInfo,\n\t\t\t\tpublishingTime: publishingTime,\n\t\t\t\tdeadline: deadline,\n\t\t\t\tquestions: questions\n\t\t\t} , { withCredentials: true })\n\t\t\t.catch(err => {\n\t\t\t\tif(err.response===undefined){\n\t\t\t\t\talert(`내부 함수 (SetAssignment.js => saveAssignmentToDB()) 문제입니다. 오류 수정 필요.`);\n\t\t\t\t}\n\t\t\t\tconst status = err.response.status;\n\t\t\t\tif (status === 400) {\n\t\t\t\t\talert(`과제 정보를 저장하는데 실패하였습니다. 잘못된 요청입니다. (${status})`);\n\t\t\t\t}\n\t\t\t\telse if (status === 401) {\n\t\t\t\t\talert(`토큰이 유효하지 않습니다. (${status})`);\n\t\t\t\t\tdocument.cookie = \"access_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t}\n\t\t\t\telse if (status === 403) {\n\t\t\t\t\talert(`과제 정보를 저장하는데 실패하였습니다. 권한이 없습니다. (${status})`);\n\t\t\t\t}\n\t\t\t\telse if (status === 404) {\n\t\t\t\t\talert(`과제 정보를 저장하는데 실패하였습니다. 과제를 찾을 수 없습니다. (${status})`);\n\t\t\t\t}\n\t\t\t\telse if (status === 500) {\n\t\t\t\t\talert(\"내부 서버 오류입니다. 잠시 후에 다시 시도해주세요...\");\n\t\t\t\t}\n\t\t\t\thistory.push(\"/home/setting\");\n\t\t\t});\n\n\t\tsetModifiedDate(new Date());\n\t\thistory.push(\"/home/setting\");\n\t}\n\n\t\n\n\treturn (\n\t\t<>\n\t\t\tNot Completed...\n\t\t</>\n\t);\n}\n\nexport default SetAssignment;\n","import React, { Dispatch, useEffect, useState } from 'react';\n\nimport { Grid, Paper, Button, Typography } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport { PageInfo, MemberPopup } from '../Components';\nimport { GroupObj } from '../Main/Type';\nimport { useGroupState, useDeleteGroup } from '../Main/Model/GroupModel';\n\n// SetMember 페이지\nconst SetMember: React.FC = () => {\n\tconst groups : Array<GroupObj> = useGroupState();\n\tconst deleteGroupFunc : (groupId : number) => void = useDeleteGroup();\n\n\t// 처음 modal을 초기화하는 정보\n\tconst [selected, setSelected] = useState<GroupObj | undefined>(undefined); \n\tconst [open, setOpen] = useState<boolean>(false);\n\n\tconst setGroup = async (id : number) => {\n\t\t// 클릭 시 selected에 group 세팅\n\t\tawait setSelected(undefined);\n\t\tawait groups.forEach((gr) => {\n\t\t\tif(gr.groupId === id)\n\t\t\t\tsetSelected(gr);\n\t\t});\n\t\tsetOpen(true);\n\t}\n\n\tconst addGroup = async () => {\n\t\tawait setSelected(undefined);\n\t\tawait setOpen(false); // open을 갱신하므로써 modal을 띄우기\n\t\tsetOpen(true);\n\t}\n\n\tconst deleteGroup = (groupId : number, className : string) => {\n\t\tif(confirm(`[${className}] 그룹을 정말로 삭제하시겠어요?`))\n\t\t\tdeleteGroupFunc(groupId);\n\t}\n\n\treturn (\n\t\t<Grid container className=\"setmember-con\" direction=\"column\">\n\t\t\t<PageInfo className=\"student-list-info\"\n\t\t\t\ticon=\"🙌🏻\"\n\t\t\t\tmainTitle=\"수강생 목록 관리\"\n\t\t\t\tsubTitle=\"수강생 목록을 추가 / 수정 하는 페이지 입니다.\" \n\t\t\t\tinformation={<p>수강생 목록의 세부 정보를 수정하시려면 수강생 목록명을 클릭하세요. 수강생 목록을 추가하시려면 &apos;수강생 목록 추가&apos; 버튼을 눌러주세요.</p>}\n\t\t\t/>\n\t\t\t<div className=\"contents-container\">\n\t\t\t\t<div className=\"contents-title\">\n\t\t\t\t\t<h6>수강생 목록</h6>\n\t\t\t\t\t<Button color=\"primary\" variant=\"contained\" onClick={addGroup}>수강생 목록 추가하기</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"contents box-layout\" >\n\t\t\t\t\t{\n\t\t\t\t\t\tgroups.length===0?\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">수강생 목록이 없습니다. 생성해주세요!</Typography>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t:groups.map((gr)=>(\n\t\t\t\t\t\t\t\t<div key={gr.groupId} className=\"box-container\">\n\t\t\t\t\t\t\t\t\t<Paper elevation={3} className=\"box-button\">\n\t\t\t\t\t\t\t\t\t\t<div onClick={() => setGroup(gr.groupId)} className=\"box-name\">\n\t\t\t\t\t\t\t\t\t\t\t{gr.className.length > 30 ?\n\t\t\t\t\t\t\t\t\t\t\t\t`${gr.className.substring(0, 30)}...` : gr.className}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"box-xbtn\">\n\t\t\t\t\t\t\t\t\t\t\t<Button onClick={()=> deleteGroup(gr.groupId, gr.className)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<ClearIcon/>\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{\n\t\t\t\topen &&\n\t\t\t\t<MemberPopup\n\t\t\t\t\ttypeProps = { selected ? 'update' : 'add' }\n\t\t\t\t\thandleClose = {() => setOpen(false)}\n\t\t\t\t\tgroupProps = { selected }\n\t\t\t\t/>\n\t\t\t}\n\t\t</Grid>\n\t);\n}\n\nexport default SetMember;\n","import React from 'react';\n\nimport { Grid, Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst Error : React.FC = () => {\n\treturn (\n\t\t<Grid id=\"error-page\">\n\t\t\t<Grid className=\"error-con\">\n\t\t\t\t<Grid className=\"error-head\">\n\t\t\t\t\t<img src=\"./img/logo_new.png\" alt=\"logo\" />\n\t\t\t\t\t<h2>404 Error</h2>\n\t\t\t\t\t<h4>We can&apos;t seem to find the page you&apos;re looking for</h4>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid className=\"btn-con\">\n\t\t\t\t\t<Link to=\"/main\"><Button color=\"primary\" variant=\"contained\">Back To Main</Button></Link>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\nexport default Error;\n","import React, { useEffect, useState } from 'react';\n\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { Input, Switch, Button } from \"@material-ui/core\";\nimport { saveMessage } from \"../Main/Model/MessageModel\";\n\nconst Admin = () => {\n\tconst history = useHistory();\n\tconst { register, handleSubmit, watch, errors } = useForm();\n\tconst saveFunction = saveMessage();\n\n\tconst onSubmit = (data: any) => {\n\t\tsaveFunction(data.message, data.onOff);\n\t};\n\n\tuseEffect(() => {\n\t\tconst key = prompt(\"What is the key of admin?\");\n\t\tif (key !== process.env.REACT_APP_ADMIN_KEY) {\n\t\t\talert(\"You are not Admin, Sorry.\");\n\t\t\thistory.push(\"/\");\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<Input name=\"message\" defaultValue=\"test\" inputRef={register({ required: true })} />\n\t\t\t\t<Switch name=\"onOff\" inputRef={register({ required: true })} />\n\n\t\t\t\t{errors.exampleRequired && <span>This field is required</span>}\n\t\t\t\t<Button type=\"submit\">SAVE</Button>\n\t\t\t</form>\n\t\t</>\n\t);\n};\n\nexport default Admin;\n","import React from 'react';\nimport { LayoutRouter } from '.';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport { Login, Error, Admin } from '../Pages';\nimport { useUserState } from './Model/UserModel';\n\n// View Model은 Model의 Context를 구독하고, 갱신하는 역할\nconst Router = () => {\n\tconst user = useUserState();\n\t// layout을 써야하는 frame만 모아둠\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\" component={Login} />\n\t\t\t<Route path=\"/admin\" component={Admin} />\n\t\t\t<Route path=\"/error\" component={Error} />\n\t\t\t{user && <Route path=\"/\" component={LayoutRouter} />}\n\t\t</Switch>\n\t);\n}\nexport default Router;\n","import React from 'react';\nimport { AssignmentContextProvider } from './Model/AssignmentModel';\nimport { UserContextProvider } from './Model/UserModel';\nimport { AnswerContextProvider } from './Model/AnswerModel';\nimport { GroupContextProvider } from './Model/GroupModel';\nimport { MessageContextProvider } from './Model/MessageModel';\nimport Router from './Router';\n\n// Model과 View Model을 이어주는 역할\nconst Provider = () => (\n\t<MessageContextProvider>\n\t\t<UserContextProvider>\n\t\t\t<AssignmentContextProvider>\n\t\t\t\t<GroupContextProvider>\n\t\t\t\t\t<AnswerContextProvider>\n\t\t\t\t\t\t<Router />\n\t\t\t\t\t</AnswerContextProvider>\n\t\t\t\t</GroupContextProvider>\n\t\t\t</AssignmentContextProvider>\n\t\t</UserContextProvider>\n\t</MessageContextProvider>\n);\n\nexport default Provider;\n","import React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { Main, Assignment, Setting, SetAssignment, SetMember, ProfAssignment } from '../Pages';\nimport { useUserState } from './Model/UserModel';\nimport { Layout } from '../Components';\n\n\nconst LayoutRouter: React.FC = () => {\n\tconst user = useUserState();\n\t// layout을 써야하는 frame만 모아둠\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/main\" component={Main} />\n\t\t\t\t{<Route path=\"/as/:asId\" component={user && (user.type === 'professor' ? ProfAssignment : Assignment)} />}\n\t\t\t\t<Route exact path=\"/setting\" component={Setting} />\n\t\t\t\t<Route path=\"/setting/:asId\" component={SetAssignment} />\n\t\t\t\t<Route path=\"/member\" component={SetMember} />\n\t\t\t\t<Redirect path=\"*\" to=\"/error\"/>\n\t\t\t</Switch>\n\t\t</Layout>\n\t)\n}\n\nexport default LayoutRouter;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from './Main';\nimport './scss/main.scss';\n\n// import library and set to use\nconst App : React.FC = () => \n\t<BrowserRouter>\n\t\t<Provider />\n\t</BrowserRouter>;\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { 'Service-Worker': 'script' },\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready\r\n\t\t\t.then(registration => {\r\n\t\t\t\tregistration.unregister();\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.error(error.message);\r\n\t\t\t});\r\n\t}\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}